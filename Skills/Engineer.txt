Task:
Протестировать диск
Decision:
$ sudo apt update 
$ sudo apt install testdisk
$ lsblk
 ...
 sdc      8:32   0 931,5G  0 disk 
└─sdc1   8:33   0 931,5G  0 part /media/dato/Файлы
$ testdisk
...
>[ Create ] Create a new log file
...
Select a media (use Arrow keys, then press Enter):
...
>Disk /dev/sdc - 1000 GB / 931 GiB - ST1000LM 035-1RK172
...
 [Previous]  [  Next  ] >[Proceed ]  [  Quit  ]
...
Please select the partition table type, press Enter when done.
...
>[EFI GPT] EFI GPT partition map (Mac i386, some x86_64...)
...
>[ Analyse  ] Analyse current partition structure and search for lost partitions
...
>[Quick Search]  [ Backup ]
...
>P MS Data                     2048 1953523711 1953521664
...
 1 P MS Data                     2048 1953523711 1953521664
...
 [  Quit  ]  [ Return ] >[Deeper Search]  [ Write  ]
Source:
# https://www.8host.com/blog/ustanovka-testdisk-i-vosstanovlenie-fajlov/?ysclid=lwwuyo1ydf377479189
Task:
How to Enable or Disable AppArmor on Ubuntu 22.04 or 20.04
Decision:
$ sudo apt install apparmor-utils apparmor-notify apparmor-profiles apparmor-profiles-extra
$ systemctl status apparmor
$ sudo apparmor_status
$ sudo aa-status
$ sudo cp -R /etc/apparmor.d /etc/apparmor.d.bak
$ cd /etc/apparmor.d
$ ls -s
$ sudo aa-disable /etc/apparmor.d/usr.sbin.cupsd
$ ls /etc/apparmor.d/disable
$ sudo aa-enable /etc/apparmor.d/usr.sbin.cupsd
$ sudo aa-genprof firefox
Source:
How to Enable or Disable AppArmor on Ubuntu 22.04 or 20.04 - https://www.linuxcapable.com/how-to-enable-or-disable-apparmor-on-ubuntu-linux/
Настройка Apparmor в Ubuntu - https://losst.pro/nastrojka-apparmor-v-ubuntu-16-04#nastroyka-apparmor-v-ubuntu
Task:
Узнать сколько места занимает на диске
Decision:
$ du -h ~/
$ du --max-depth 1 -h .
$ sudo apt-get -y install ncdu
$ ncdu
Task:
определить в текущей папке занимаемое место всеми подкаталогами и файлами
Decision:
$ du -sm *
Task:
отсортировать результаты, чтобы выяснить, чем занято место в конкретной папке или на всем разделе
Decision:
$ du -sm * | sort -n
$ du -smh *
Task:
Найдите самую большую директорию в корне
Decision:
$ sudo du -sh /* | sort -h | tail -3
Task:
Напишите команду, которая выведет сколько места на диске занимает текущая директория (при этом размер нужно вывести в удобном для чтения формате (например, вместо 2048 байт надо выводить 2.0К) и больше на экран выводить ничего не нужно).
Decision.
$ du -hs
  938M
Task:
Узнать сколько места занято/свободно во всей системе
Decision:
$ sudo df -h
Filesystem   Size Used Avail Use% Mounted on
tmpfs     196M 1.6M 195M 1% /run
/dev/sda3    49G 31G 16G 67% /
tmpfs     980M   0 980M 0% /dev/shm
tmpfs     5.0M 4.0K 5.0M 1% /run/lock
/dev/sda2   512M 6.1M 506M 2% /boot/efi
tmpfs     196M 76K 196M 1% /run/user/127
tmpfs     196M 64K 196M 1% /run/user/1001
Task:
посмотреть занятость файловой системы в %, в килограммах
Decision:
$ df --output=pcent
Source:
Просмотр занятого места на разделах командой du - https://winitpro.ru/index.php/2021/02/20/svobodnoe-mesta-na-diske-v-linux/
Task:
лиункс сам может находить устройства, но иногда нужно добавлять устаройства или модули ядра для того чтобы это устройство работало, для этого есть утилиты управления модулями ядра.
в lsmod увидим e1000, это интернет модуль, который отвечает за сетевую карту, давайте проверим. в description увидим  название сет карты. удалим и вернем его. но на нас будут ругаться так как от него заисят еще другие модули ядра.
Decision:
$ lsmod
$ modinfo e1000
$ rmmod e1000
$ insmod e1000
    insmod: ERROR: could not load module e1000: No such file or directory
$ insmod e1000
    insmod: ERROR: could not load module e1000: No such file or directory
$ modprobe e1000
Task:
Не тот адрес у принтера Epson WorkForce Pro WF-5690. у него был адрес 169.254... (это смотришь в самом принтере, возле значка wifi). А нужен адрес 10.38.(свой адрес). Поэтому не все компьютеры, которые подключены к принтеру не видят его. И из-за этого выдавало ошибку, что не подключен принтер к компьюетру.
Decision:
Нужно поменять айпи адрес. ->С компа заходим в сеть -> ищем наш принтер ->правой кнопкой просмотр веб-стр -> небезопасно -> вводим админский логин и пароль  -> заходим в network/wifi basi-c -> заполняем printer name: EPS5690-31 -> location: 31 (то есть кабинет) -> obtain ipadr: manual  -> ip adr:10.38.(свой адрес) (именно на этот адрес мы сейчас меняем)  -> subnet mask:255..(свой адрес)..  -> default gateway:10.38...,  -> DNS sever setting: manual  -> primary dns server:10.77.(свой адрес).  -> secondary dns server:10.77..(свой адрес).  -> dns host name setting: manual  -> dns domain name setting:manual  -> dns domain name: пишем доменное имя -> register the network interface addr to dns:disable  -> proxy serve setting: do not  use  -> ipv6 setting:enable  -> ipv6 privarty extention:disable -> продолжить  -> ок -> перезагрузим принтер ->Теперь должен быть правильный адрес и долно все работать
Task:
Компьютер не видит сетевой принтер Kyocera FS-6525 MFP
Decision:
Нужно поменять ip-адрес в самом принтере. Вводим админ и пароль, мастер установки, вводим нужный адрес 10.38...., маски - 255.255...., и основной шлюз - 10.38..., ок, перезагружаемся, включаем и выключаем
Task:
Sharp AR-6020 был подключен к моноблоку локально через usb. В кабинете появился новый сотрудник, а значит надо подключить новый ноутбук сотрудника к принтеру Sharp AR-6020. Можно подключать через соседнего компа.
Decision:
Для этого в ноутбуке откроем любую папку -> ищем через \\ в адресной строке папку нужного компьютера, который подключен к нашему принтеру  ->В нашем случае - ищем моноблок ->И в папке мы должны будем увидеть нужный принтер. -> В моем случае папка была пустая,так как Моноблок ограничивал доступ к нашему принтеру.  ->  в моноблоке зайти в панель управления  -> устройства и принтеры ->свойства нашего принтера ->доступ ->поставить галочки на общий доступ -> И обратно, подходим к нотбуку -> в адресной строке компьюетра \\ -> появится принтер  ->Правой кнопкой мыши и подключаемся -> Все, принтер после этого заработает на двух компьютерах - мононблок и ноутбук.
Task:
Настроить новый принтер Epson WorkForce Pro WF-5690
Decision:
включ без кабеля, настраиваем дата и время и язык. подкл кабель, а4, без факса, устанавл дрйвера - soft/epsonwf64, устанвл prtDRV, перезагр, возле часов появится ярлык EPSON, прав кнопка, обновл дрйвера, ок, настройка принтера, прав кнопка, сервис, обвнол ПО, на верх галочки дб, настнавл, 2х галочек больше нету, выход,Сначала делаем на компе своем прошивку через Epson software, обязательно выбираем правильный принтер. обновляем, распечает листовку (2, 3), чтобы узнать какой IP адрес стоит у принтера. Настройки - статус сети - состояние сети - печать (4 лист). IP адреса постоянно меняются, поэтому нужно новый поставить в серверной. был адрес tIp1, general information  9с:АЕ:... Идем в сервер - диспетчер сервера DHCP - резервирование - создать рез-ние - и что еще было ... - идем обратно в наш кабиент - у принтера меняем thost имя, ищем у себя на компе ту сеть - просмотр Web, страницы устройства: adminstrat settle - change - tPassword, contacts add  - name: библиотеки и студенты, адр tIp2\общ папка\библиотека\scan, tIp2\студент\scan 
Task:
Компьютер включен, загружен, подключен к сети, работает корректно, но не «пингуется», в чем может быть причина?
Decision:
Брандмауэр (firewall) блокирует ICMP-трафик.
Task:
Вытащить последние 1000 строк лога, первые 1200 строк логов
Decision:
$ tail -n 1000 /var/log/syslog
$ head -n 1200 /var/log/syslog
Task:
адрес в mx записи linux
Decision:
$ dig @сервер доменное.имя тип записи флаги
Task:
Исправление ошибок в коде
Decision:
Занесите ошибку в трекер:
- Что делал пользователь.
- Что он ожидал увидеть.
- Что случилось на самом деле.
Поищите сообщение об ошибке в сети. Если у вас есть сообщение об ошибке, то вам повезло. Или оно будет достаточно информативным, чтобы вы поняли, где и в чем заключается ошибка, или у вас будет готовый запрос для поиска в сети. 
Найдите строку, в которой проявляется ошибка. Если ошибка вызывает падение программы, попробуйте запустить её в IDE под отладчиком и посмотрите, на какой строчке кода она остановится. это может дать вам информацию о природе бага.
Найдите точную строку, в которой появилась ошибка. Как только вы найдете строку, в которой проявляется ошибка, вы можете пройти назад по коду, чтобы найти, где она содержится. Иногда это может быть одна и та же строка. Но чаще всего вы обнаружите, что строка, на которой упала программа, ни при чем, а причина ошибки — в неправильных данных, которые появились ранее. Если вы отслеживаете выполнение программы в отладчике, то вы можете пройтись назад по стектрейсу, чтобы найти ошибку. Если вы находитесь внутри функции, вызванной внутри другой функции, вызванной внутри другой функции, то стектрейс покажет список функций до самой точки входа в программу (функции main()). Если ошибка случилась где-то в подключаемой библиотеке, предположите, что ошибка все-таки в вашей программе — это случается гораздо чаще. Найдите по стектрейсу, откуда в вашем коде вызывается библиотечная функция, и продолжайте искать.
Выясните природу ошибки. 
- Ошибка на единицу. Вы начали цикл for с единицы вместо нуля или наоборот. Или, например, подумали, что метод .count() или .length() вернул индекс последнего элемента. Проверьте документацию к языку, чтобы убедиться, что нумерация массивов начинается с нуля или с единицы. Эта ошибка иногда проявляется в виде исключения Index out of range.
- Состояние гонки. Ваш процесс или поток пытается использовать результат выполнения дочернего до того, как тот завершил свою работу. Ищите использование sleep() в коде. Возможно, на мощной машине дочерний поток выполняется за миллисекунду, а на менее производительной системе происходят задержки. Используйте правильные способы синхронизации многопоточного кода: мьютексы, семафоры, события и т. д.
- Неправильные настройки или константы. Проверьте ваши конфигурационные файлы и константы. Я однажды потратил ужасные 16 часов, пытаясь понять, почему корзина на сайте с покупками виснет на стадии отправки заказа. Причина оказалась в неправильном значении в /etc/hosts, которое не позволяло приложению найти ip-адрес почтового сервера, что вызывало бесконечный цикл в попытке отправить счет заказчику.
- Неожиданный null. Бьюсь об заклад, вы не раз получали ошибку с неинициализированной переменной. Убедитесь, что вы проверяете ссылки на null, особенно при обращении к свойствам по цепочке. Также проверьте случаи, когда возвращаемое из базы данных значение NULL представлено особым типом.
- Некорректные входные данные. Вы проверяете вводимые данные? Вы точно не пытаетесь провести арифметические операции с введенными пользователем строками?
- Присваивание вместо сравнения. Убедитесь, что вы не написали = вместо ==, особенно в C-подобных языках.
- Ошибка округления. Это случается, когда вы используете целое вместо Decimal, или float для денежных сумм, или слишком короткое целое (например, пытаетесь записать число большее, чем 2147483647, в 32-битное целое). Кроме того, может случиться так, что ошибка округления проявляется не сразу, а накапливается со временем (т. н. Эффект бабочки).
- Переполнение буфера и выход за пределы массива. Проблема номер один в компьютерной безопасности. Вы выделяете память меньшего объема, чем записываемые туда данные. Или пытаетесь обратиться к элементу за пределами массива.
- Программисты не умеют считать. Вы используете некорректную формулу. Проверьте, что вы не используете целочисленное деление вместо взятия остатка, или знаете, как перевести рациональную дробь в десятичную и т. д.
- Конкатенация строки и числа. Вы ожидаете конкатенации двух строк, но одно из значений — число, и компилятор пытается произвести арифметические вычисления. Попробуйте явно приводить каждое значение к строке.
- 33 символа в varchar(32). Проверяйте данные, передаваемые в INSERT, на совпадение типов. Некоторые БД выбрасывают исключения (как и должны делать), некоторые просто обрезают строку (как MySQL). Недавно я столкнулся с такой ошибкой: программист забыл убрать кавычки из строки перед вставкой в базу данных, и длина строки превысила допустимую как раз на два символа. На поиск бага ушло много времени, потому что заметить две маленькие кавычки было сложно.
- Некорректное состояние. Вы пытаетесь выполнить запрос при закрытом соединении или пытаетесь вставить запись в таблицу прежде, чем обновили таблицы, от которых она зависит.
- Особенности вашей системы, которых нет у пользователя. Например: в тестовой БД между ID заказа и адресом отношение 1:1, и вы программировали, исходя из этого предположения. Но в работе выясняется, что заказы могут отправляться на один и тот же адрес, и, таким образом, у вас отношение 1:многим.
Task:
Установка Subversion - система контроля версий
Decision:
# yum list | grep subversion
subversion.x86_64 1.10.2-1.module_el8.0.0+45+75bba4f4 @AppStream
subversion-libs.x86_64 1.10.2-1.module_el8.0.0+45+75bba4f4 @AppStream
subversion-devel.x86_64 1.10.2-1.module_el8.0.0+45+75bba4f4 AppStream
subversion-gnome.x86_64 1.10.2-1.module_el8.0.0+45+75bba4f4 AppStream
subversion-javahl.noarch 1.10.2-1.module_el8.0.0+45+75bba4f4 AppStream
subversion-perl.x86_64 1.10.2-1.module_el8.0.0+45+75bba4f4 AppStream
subversion-tools.x86_64 1.10.2-1.module_el8.0.0+45+75bba4f4 AppStream
# yum -y install subversion
# svnversion --version
Task:
Работаем с репозиторием
Decision:
# vim /etc/xinetd.d/ssh 
# cat /etc/xinetd.d/ssh
service ssh 
{
disable = yes
socket_type = stream
protocol = tcp
port = 22
wait = no
user = root
server = /usr/sbin/sshd
server_args = -i
only_from = 192.168.0.0
}
# systemctl restart xinetd
# systemctl restart sshd
Task:
Для удобства работы я настроил работу по ключам у себя на машине, чтобы не приходилось вводить пароль каждый раз когда его спросят.
Decision:
# ssh-keygen -t rsa
# ssh-copy-id -i ~/.ssh/id_rsa.pub root@localhost
/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/root/.ssh/id_rsa.pub"
/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
root@localhost's password:
Number of key(s) added: 1
Now try logging into the machine, with: "ssh 'root@localhost'"
and check to make sure that only the key(s) you wanted were added.
# mkdir /svn
Task:
Создаем репозиторий
Decision:
# svnadmin create /svn/myrepo
# svn info file:///svn/myrepo/
Path: myrepo
URL: file:///svn/myrepo
Relative URL: ^/
Repository Root: file:///svn/myrepo
Repository UUID: bbe1dc47-235c-4cf4-b253-af3d81a943a3
Revision: 0
Node Kind: directory
Last Changed Rev: 0
Last Changed Date: 2020-04-09 21:36:41 -0400 (Чт, 09 апр 2020)
Task:
Репозиторий пустой о чем говорит “Revision: 0”. С каждым новым измением в репозитории номер ревизии будет увеличиваться на единицу.
В каталоге docs я подготовил несколько файлов которые положат начало новому репозиторию
Decision:
# ls -l docs
итого 12
-rw-r--r--. 1 root root 14 апр 9 21:40 file1
-rw-r--r--. 1 root root 14 апр 9 21:40 file2
-rw-r--r--. 1 root root 15 апр 9 21:40 file3
# svn import docs file:///svn/myrepo/ -m "start the dance"
Adding docs/file1
Adding docs/file2
Adding docs/file3
Committing transaction...
Committed revision 1.
# svn info file:///svn/myrepo/
Path: myrepo
URL: file:///svn/myrepo
Relative URL: ^/
Repository Root: file:///svn/myrepo
Repository UUID: bbe1dc47-235c-4cf4-b253-af3d81a943a3
Revision: 1
Node Kind: directory
Last Changed Author: root
Last Changed Rev: 1
Last Changed Date: 2020-04-09 21:41:48 -0400 (Чт, 09 апр 2020)
# svn list file:///svn/myrepo/
file1
file2
file3
Task:
У нас получился репозиторий с тремя файлами. Теперь мы создадим рабочую копию этого репозитория и поработаем с ней.
Decision:
# svn co file:///svn/myrepo/
A myrepo/file1
A myrepo/file2
A myrepo/file3
Checked out revision 1.
# ls -l
итого 0
drwxr-xr-x. 2 root root 45 апр 9 21:40 docs
drwxr-xr-x. 3 root root 57 апр 9 21:43 myrepo
# cd myrepo/
# ls -l
итого 12
-rw-r--r--. 1 root root 14 апр 9 21:43 file1
-rw-r--r--. 1 root root 14 апр 9 21:43 file2
-rw-r--r--. 1 root root 15 апр 9 21:43 file3
# echo "new line" >> file1
# cat myrepo/file1
it is file 1
new line
new line2
# svn commit -m "file1 has been modified"
Sending file1
Transmitting file data .done
Committing transaction...
Committed revision 2.
# ls -l /svn/myrepo
итого 12
drwxr-xr-x. 2 root root 76 апр 9 21:36 conf
drwxr-sr-x. 6 root root 4096 апр 9 21:46 db
-r--r--r--. 1 root root 2 апр 9 21:36 format
drwxr-xr-x. 2 root root 231 апр 9 21:36 hooks
drwxr-xr-x. 2 root root 41 апр 9 21:36 locks
-rw-r--r--. 1 root root 246 апр 9 21:36 README.txt
# ifconfig
...
inet 192.168.0.104
...
Decision:
# yum -y install subversion
# pwd
/home/linux
Task:
Получение копии репозитория с удаленного сервера где у вас есть аккаунт
Убедитесь, что пользователь включен в нужную группу для доступа к репозиториям.
Decision:
# svn co svn+ssh://root@192.168.0.104/svn/myrepo
root@192.168.0.104's password:
A myrepo/file1
A myrepo/file2
A myrepo/file3
Получена редакция 3.
# ls myrepo/
file1 file2 file3
# cd myrepo/
# cat file2
it is file 2
# vim file2
# cat file2
it is file 2
new modificate 1
# svn commit -m "file2 has been modified"
root@192.168.0.104's password:
Посылаю file2
Передаю данные .done
Committing transaction...
Committed revision 4.
# cat file3
it is file 3
# vim file3
# cat file3
it is file 3
new file3
# svn commit -m "file3 has been modified"
Sending file3
Transmitting file data .done
Committing transaction...
Committed revision 5.
# svn info file:///svn/myrepo
Path: myrepo
URL: file:///svn/myrepo
Relative URL: ^/
Repository Root: file:///svn/myrepo
Repository UUID: bbe1dc47-235c-4cf4-b253-af3d81a943a3
Revision: 5
Node Kind: directory
Last Changed Author: root
Last Changed Rev: 5
Last Changed Date: 2020-04-29 07:43:37 -0400 (Ср, 29 апр 2020)
# cat file3
it is file 3
# vim file3
# cat file3
it is file 3
modified ubuntu3
# svn commit -m "file3 has been modified ubuntu3"
root@192.168.0.104's password:
Посылаю file3
Передаю данные .done
Committing transaction...
svn: E160028: Фиксация не удалась (подробности приведены ниже):
svn: E160028: File '/file3' is out of date
# svn update
Updating '.':
root@192.168.0.104's password:
C file3
Обновлено до редакции 5.
Summary of conflicts:
Text conflicts: 1
Conflict discovered in file 'file3'.
Select: (p) postpone, (df) show diff, (e) edit file, (m) merge,
(mc) my side of conflict, (tc) their side of conflict,
(s) show all options: m
Merging 'file3'.
Conflicting section found during merge:
(1) their version (at line 2) |(2) your version (at line 2)
--------------------------------------+--------------------------------------
new file3 |modified ubuntu3
--------------------------------------+--------------------------------------
Select: (1) use their version, (2) use your version,
(12) their version first, then yours,
(21) your version first, then theirs,
(e1) edit their version and use the result,
(e2) edit your version and use the result,
(eb) edit both versions and use the result,
(p) postpone this conflicting section leaving conflict markers,
(a) abort file merge and return to main menu: 2
Merge of 'file3' completed.
Select: (p) postpone, (df) show diff, (e) edit file, (m) merge,
(r) mark resolved, (mc) my side of conflict,
(tc) their side of conflict, (s) show all options: p
Summary of conflicts:
Text conflicts: 1
# ls
file1 file2 file3 file3.mine file3.r3 file3.r5
# cat file3.r3
it is file 3
# cat file3.r5
it is file 3
new file3
# cat file3.mine
it is file 3
modified ubuntu3
# rm -f file3.r3 file3.r5 file3.mine
# vim file3
# cat file3
it is file 3
modified ubuntu3
# svn commit -m "file3 has been modified ubuntu3"
root@192.168.0.104's password:
Посылаю file3
Передаю данные .done
Committing transaction...
Committed revision 6.
# svn update
Updating '.':
U file3
U file2
Updated to revision 6.
# ls -l
итого 12
-rw-r--r--. 1 root root 33 апр 29 06:47 file1
-rw-r--r--. 1 root root 30 апр 29 07:57 file2
-rw-r--r--. 1 root root 30 апр 29 07:57 file3
# cat file3
it is file 3
modified ubuntu3
Task:
Системный пользователь, который не является членом группы agents
Decision:
# svn list svn+ssh://mybestuser@linuxbox/svn/myrepo 
mybestuser@linuxbox's password:
file1
file2
file3
secret/
# svn list svn+ssh://mybestuser@linuxbox/svn/myrepo/secret
mybestuser@linuxbox's password:
svn: Authorization failed
# svn list svn+ssh://mybestuser@linuxbox/svn/myrepo/secret/public
mybestuser@linuxbox’s password:
file3
Task:
Ограничение доступа
У нас уже есть репозиторий /svn/myrepo и сейчас мы разберемся с правами доступа к нему.
Decision:
# useradd james
# passwd james
# ls -l /svn/myrepo/conf/
итого 20
-rw-r--r--. 1 root root 1080 апр 9 21:36 authz
-rw-r--r--. 1 root root 885 апр 9 21:36 hooks-env.tmpl
-rw-r--r--. 1 root root 309 апр 9 21:36 passwd
-rw-r--r--. 1 root root 4391 апр 29 08:05 svnserve.conf
# vim /svn/myrepo/conf/svnserve.conf
# cat /svn/myrepo/conf/svnserve.conf
...
[general]
anon-access = none
#auth-access = write
#password-db = passwd
authz-db = authz
#realm = Bunch_Of_My_Repos
Task:
Передаваемая информация не шифруется. Этот способ устарел и я не рекомендую его использовать. Чтобы вы примерно понимали что это за файл я вам приведу пример
Decision:
# cat /svn/myrepo/conf/passwd
[users]
# harry = harryssecret
# sally = sallyssecret
# cat /svn/myrepo/conf/passwd
This file is an example password file for svnserve.
### Its format is similar to that of svnserve.conf. As shown in the
### example below it contains one section labelled [users].
### The name and password for each user follow, one account per line.
[users]
#harry = harryssecret
#sally = sallyssecret
james = qaz
Task:
В файле svnserve.conf раскоментируем строку password-db = passwd, в файл authz добавим запись для пользователя harry если общая политика ему не подходит.
Decision:
# vim /svn/myrepo/conf/svnserve.conf
...
[general]
anon-access = none
#auth-access = write
password-db = passwd
authz-db = authz
#realm = Bunch_Of_My_Repos
Task:
Запустим службу svnserve
Decision:
# svnserve -d
# svn list svn://harry@thost1/svn/myrepo
Authentication realm: <svn://thost1:3690> bbe1dc47-235c-4cf4-b253-af3d81a943a3
Password for 'root': *************
Authentication realm: <svn://thost1:3690> bbe1dc47-235c-4cf4-b253-af3d81a943a3
Username: james
Password for 'james': ***
-----------------------------------------------------------------------
ATTENTION! Your password for authentication realm:
<svn://thost1:3690> bbe1dc47-235c-4cf4-b253-af3d81a943a3
can only be stored to disk unencrypted! You are advised to configure
your system so that Subversion can store passwords encrypted, if
possible. See the documentation for details.
You can avoid future appearances of this warning by setting the value
of the 'store-plaintext-passwords' option to either 'yes' or 'no' in
'/root/.subversion/servers'.
-----------------------------------------------------------------------
Store password unencrypted (yes/no)? yes
file1
file2
file3
Task:
В том же каталоге где и svnserve.conf (<путь к репозиторию>/conf/) создаем файл authz и вносим в него конфигурацию
Decision:
# vim /svn/myrepo/conf/authz
# cat /svn/myrepo/conf/authz
agents = james, piter
[/]
*=r
[/secret]
@agents = rw
*=
[/secret/public]
* = rw
Task:
Системный пользователь, который является членом группы agents
Decision:
# svn list svn+ssh://james@192.168.0.104/svn/myrepo
james@linuxbox's password:
file1
file2
file3
secret/
# svn list svn+ssh://james@192.168.0.104/svn/myrepo/secret
james@linuxbox's password:
file1
file2
file3
public/
# svn list svn+ssh://james@192.168.0.104/svn/myrepo/secret/public
james@linuxbox’s password:
file3
Source:
https://www.youtube.com/playlist?list=PLtSGboPf3g50Aejrp6KjQsqqjxvAO4aKw
https://www.youtube.com/playlist?list=PLdEqf7lxtAH--exov42yypdvOi7bDqoBQ
https://losst.ru/proverka-linux-na-virusy
https://www.youtube.com/watch?v=t6wO3qsxrSo&list=PL76C3E97EB0FDB323&index=18&t=0s
https://linuxconfig.org/how-to-install-xinetd-service-in-redhat-8
Task:
Система инициализации systemd
Зайдите в rescue.target, посмотрите содержимое fstab, после чего вернитесь в graphical.target.
Decision:
$ systemctl get-default
graphical.target
$ systemctl list-units --type target --all
  UNIT                                                                          
  ...                                                                 
  graphical.target                                                              
  ...                                                             
  multi-user.target                                                             
  ...                                                           
  rescue.target                                                                                                                              
lines 11-33
$ sudo systemctl set-default rescue.target
Removed /etc/systemd/system/default.target.
Created symlink /etc/systemd/system/default.target → /usr/lib/systemd/system/rescue.target.
$ systemctl get-default
rescue.target
$ cat /usr/lib/systemd/system/rescue.target
#  SPDX-License-Identifier: LGPL-2.1+
#
#  This file is part of systemd.
#
#  systemd is free software; you can redistribute it and/or modify it
#  under the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation; either version 2.1 of the License, or
#  (at your option) any later version.
[Unit]
Description=Rescue Mode
Documentation=man:systemd.special(7)
Requires=sysinit.target rescue.service
After=sysinit.target rescue.service
AllowIsolate=yes
$ sudo cat /etc/fstab
#
# /etc/fstab
# Created by anaconda on Mon Mar 21 05:33:35 2022
#
# Accessible filesystems, by reference, are maintained under '/dev/disk/'.
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info.
#
# After editing this file, run 'systemctl daemon-reload' to update systemd
# units generated from this file.
#
/dev/mapper/ro_redos-root /                       ext4    defaults        1 1
UUID=2fefa97c-6093-43b9-99f0-23f8a1467990 /boot                   ext4    defaults        1 2
/dev/mapper/ro_redos-swap none                    swap    defaults        0 0
$ sudo systemctl set-default graphical.target
Removed /etc/systemd/system/default.target.
Created symlink /etc/systemd/system/default.target → /usr/lib/systemd/system/graphical.target.
$ systemctl get-default
graphical.target
Task:
Сделайте multi-user.target режимом по умолчанию.
Decision:
$ sudo systemctl set-default multi-user.target
Removed /etc/systemd/system/default.target.
Created symlink /etc/systemd/system/default.target → /usr/lib/systemd/system/multi-user.target.
$ systemctl get-default
multi-user.target
Task:
Управление процессами.
Сохраните в отдельном файле и прокомментируйте данные о процессе init
Decision:
$ ps aux -p 1 > processes.txt
# выводим содержимое файла processes.txt на экран. поле USER отображает имя пользователя, запустившего процесс, PID - идентификатор процесса, %CPU - уровень использования процессора, %MEM - уровень использования памяти, VSZ - объём используемой виртуальной памяти, RSS - объём используемой реальной памяти, TTY - терминал, с которым связан процесс("?" потому, что init это первый системный процесс и он не связан ни с одним терминалом), STAT - состояние выполнения("S" - означает, что процесс бездействует, "s" - то что процесс лидер сеанса), START - время старта, TIME - время исполнения (на процессоре), COMMAND - имя программы.
$ cat processes.txt
USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND
root 1 0.7 0.0 1628 536 ? Ss 13:53 0:01 /sbin/init splash
Task:
Сохраните листинг самых ресурсоемких процессов и прокомментируйте его.
Decision:
$ ps aux --sort -pcpu | head -n 3
USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND
root 4997 5.5 3.8 127632 40044 ? SLl 11:56 0:16 amarok
root 5304 3.9 0.0 1852 776 ? RN 12:00 0:01 /usr/bin/updatedb
# поле USER отображает имя пользователя, запустившего процесс, PID - идентификатор процесса, %CPU - уровень использования процессора, %MEM - уровень использования памяти, VSZ - объём используемой виртуальной памяти, RSS - объём используемой реальной памяти, TTY - терминал, с которым связан процесс, STAT - состояние выполнения, START - время старта, TIME - время исполнения (на процессоре), COMMAND - имя программы.
# в выводе этого листинга видно, что процесс amarok с PID 4997, созданный пользователем root является самым ресурсоемким по использованию процессора. он использует процессор на 5.5, память на 3.8, его виртуальная память 127632, реальная память 40044, он не прикреплен ни к одному терминалу, его статус: "S" - означает, что процесс бездействует(ожидает выполнения), "L" - означает что это real-time процесс, имеются страницы заблокированные в памяти, время запуска процесса 11 часов 56 минут, время выполнения 16 секунд.
$ ps aux --sort -pmem | head -n 3
USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND
root 1 0.2 0.1 1628 536 ? Ss 11:54 0:02 /sbin/init splash
root 2 0.0 0.0 0 0 ? S 11:54 0:00 [migration/0]
# поле USER отображает имя пользователя, запустившего процесс, PID - идентификатор процесса, %CPU - уровень использования процессора, %MEM - уровень использования памяти, VSZ - объём используемой виртуальной памяти, RSS - объём используемой реальной памяти, TTY - терминал, с которым связан процесс, STAT - состояние выполнения, START - время старта, TIME - время исполнения (на процессоре), COMMAND - имя программы.
# в выводе этого листинга видно, что процесс "/sbin/init splash" с PID 1, созданный пользователем root является самым ресурсоемким по использованию оперативной памяти. он использует процессор на 0.2, память на 0.1, его виртуальная память 1628, реальная память 536, он не прикреплен ни к одному терминалу, его статус: "S" - означает, что процесс бездействует, "s" - то что процесс лидер сеанса, время запуска процесса 11 часов 54 минуты, время выполнения 2 секунды.
Task:
Запустите gedit, найдите его pid, найдите pid его родительского процесса и так по цепочке все родительские pid-ы.
Decision:
[centos@cs ~]$ gedit &
[1] 3965
[centos@cs ~]$ ps | grep gedit
3965 pts/1 00:00:01 gedit
[centos@cs ~]$ ps -ef | grep gedit
centos 3965 3218 1 10:01 pts/1 00:00:01 gedit
centos 4039 3218 0 10:03 pts/1 00:00:00 grep --color=auto gedit
[centos@cs ~]$ ps -f 3218
UID PID PPID C STIME TTY STAT TIME CMD
centos 3218 3215 0 09:25 pts/1 Ss 0:00 -bash
[centos@cs ~]$ ps -f 3215
UID PID PPID C STIME TTY STAT TIME CMD
centos 3215 3208 0 09:25 ? S 0:00 sshd: centos@pts/1
[centos@cs ~]$ ps -f 3208
UID PID PPID C STIME TTY STAT TIME CMD
root 3208 1013 0 09:25 ? Ss 0:00 sshd: centos [priv]
[centos@cs ~]$ ps -f 1013
UID PID PPID C STIME TTY STAT TIME CMD
root 1013 1 0 09:17 ? Ss 0:00 /usr/sbin/sshd -D -oCiphers=aes256-gcm@openssh.com,chacha20-poly1
[centos@cs ~]$ ps -f 1
UID PID PPID C STIME TTY STAT TIME CMD
root 1 0 0 09:15 ? Ss 0:05 /usr/lib/systemd/systemd --switched-root --system --deserialize 1
Task:
Запустите форк-бомбу :
:(){ :|:& };:
Затем перезагрузите виртуалку, ограничьте количество процессов у своего пользователя до 50 и заново запустите форк-бомбу.
Decision:
[centos@cs ~]$ :(){ :|:& };:
[2] 4788
[centos@cs ~]$ -bash: fork: retry: Resource temporarily unavailable
-bash: fork: retry: Resource temporarily unavailable
...
-bash: fork: retry: Resource temporarily unavailable
-bash: fork: Resource temporarily unavailable
client_loop: send disconnect: Connection reset
C:\Users\tuser>
C:\Users\tuser>ssh centos@tipcentos
centos@tipcentos's password:
Activate the web console with: systemctl enable --now cockpit.socket
Last login: Sat Jan 22 09:25:45 2022 from tip
[centos@cs ~]$ vim ~/.bash_profile
[centos@cs ~]$ cat ~/.bash_profile
# .bash_profile
# Get the aliases and functions
if [ -f ~/.bashrc ]; then
. ~/.bashrc
fi
# User specific environment and startup programs
# Limits
ulimit -u 50
[centos@cs ~]$ :(){ :|:& };:
Task:
Запустите любой процесс в фоновом режиме (к примеру, gedit). Найдите его родительский процесс. Найдите все дочерние процессы, которые принадлежат этому родительскому процессу. Убейте родительский процесс. Проверьте дочерние процессы и найдите новый родительский процесс.
Decision:
[centos@cs ~]$ gedit &
[1] 5380
[centos@cs ~]$ ps -ef | grep gedit
centos 5215 5164 0 12:30 pts/0 00:00:01 gedit
centos 5387 5285 0 12:34 pts/2 00:00:00 grep --color=auto gedit
[centos@cs ~]$ ps -f 5164
UID PID PPID C STIME TTY STAT TIME CMD
centos 5164 5159 0 12:30 pts/0 Ss+ 0:00 bash
[centos@cs ~]$ ps -ef | grep 5164
centos 5164 5159 0 12:30 pts/0 00:00:00 bash
centos 5215 5164 0 12:30 pts/0 00:00:01 gedit
centos 5406 5285 0 12:35 pts/2 00:00:00 grep --color=auto 5164
[centos@cs ~]$ pstree -p | grep gedit
| |-gnome-terminal-(5159)-+-bash(5164)---gedit(5215)-+-{gedit}(5222)
| | | |-{gedit}(5223)
| | | `-{gedit}(5224)
[centos@cs ~]$ ps -xal | grep gedit
0 1000 5215 5164 20 0 566668 52284 x64_sy Sl pts/0 0:01 gedit
0 1000 5442 5285 20 0 12136 1104 - S+ pts/2 0:00 grep --color=auto gedit
[centos@cs ~]$ kill -KILL 5164
[centos@cs ~]$ ps -ef | grep gedit
centos 5215 2331 0 12:30 ? 00:00:01 gedit
centos 5552 5285 0 12:40 pts/2 00:00:00 grep --color=auto gedit
[centos@cs ~]$ ps 2331
PID TTY STAT TIME COMMAND
2331 ? Ss 0:00 /usr/lib/systemd/systemd --user
[centos@cs ~]$ ps 1
PID TTY STAT TIME COMMAND
1 ? Ss 0:06 /usr/lib/systemd/systemd --switched-root --system --deserialize 17
Task:
получить полный список сигналов
Decision:
$ kill -l
 1) SIGHUP     2) SIGINT     3) SIGQUIT     4) SIGILL     5) SIGTRAP
 6) SIGABRT     7) SIGBUS     8) SIGFPE     9) SIGKILL    10) SIGUSR1
11) SIGSEGV    12) SIGUSR2    13) SIGPIPE    14) SIGALRM    15) SIGTERM
16) SIGSTKFLT    17) SIGCHLD    18) SIGCONT    19) SIGSTOP    20) SIGTSTP
21) SIGTTIN    22) SIGTTOU    23) SIGURG    24) SIGXCPU    25) SIGXFSZ
26) SIGVTALRM    27) SIGPROF    28) SIGWINCH    29) SIGIO    30) SIGPWR
31) SIGSYS    34) SIGRTMIN    35) SIGRTMIN+1    36) SIGRTMIN+2    37) SIGRTMIN+3
38) SIGRTMIN+4    39) SIGRTMIN+5    40) SIGRTMIN+6    41) SIGRTMIN+7    42) SIGRTMIN+8
43) SIGRTMIN+9    44) SIGRTMIN+10    45) SIGRTMIN+11    46) SIGRTMIN+12    47) SIGRTMIN+13
48) SIGRTMIN+14    49) SIGRTMIN+15    50) SIGRTMAX-14    51) SIGRTMAX-13    52) SIGRTMAX-12
53) SIGRTMAX-11    54) SIGRTMAX-10    55) SIGRTMAX-9    56) SIGRTMAX-8    57) SIGRTMAX-7
58) SIGRTMAX-6    59) SIGRTMAX-5    60) SIGRTMAX-4    61) SIGRTMAX-3    62) SIGRTMAX-2
63) SIGRTMAX-1    64) SIGRTMAX
Task:
Предположим вы запустили программы firefox, filezilla и gedit в фоновом режиме. После этого вы выполнили следующие действия: fg %1, Ctrl+С, fg %2, Ctrl+Z, jobs. Информация о каких программах будет показана при выполнении команды jobs?
Decision:
$ firefox &
[1] 8962
$ filezilla &
[2] 9141
$ gedit &
[3] 9184
$ jobs
[1]   Running                 firefox &
[2]-  Running                 filezilla &
[3]+  Running                 gedit &
$ fg %1
firefox
^C[GFX1-]: Receive IPC close with reason=AbnormalShutdown
Exiting due to channel error.
[GFX1-]: Receive IPC close with reason=AbnormalShutdown
Exiting due to channel error.
[GFX1-]: Receive IPC close with reason=AbnormalShutdown
Exiting due to channel error.
$ fg %2
filezilla
^Z
[2]+  Stopped                 filezilla
$ jobs
[2]+  Stopped                 filezilla
[3]-  Running                 gedit &
Task:
Как запустить программу в фоне
Decision:
u@uv:~/Изображения$ packettracer &
[1] 3270
u@uv:~/Изображения$ ps aux | grep packettracer
u      3270  0.0  0.1  18132  3192 pts/1    S    20:27   0:00 /bin/bash /usr/local/bin/packettracer
u      3361  0.0  0.1  17700  2796 pts/1    S+   20:28   0:00 grep --color=auto packettracer
u@uv:~/Изображения$ kill %1
u@uv:~/Изображения$ ps aux | grep packettracer
u      3364  0.0  0.0  17700   660 pts/1    S+   20:28   0:00 grep --color=auto packettracer
[1]+  Завершено      packettracer  
Source:
https://basis.gnulinux.pro/
https://stepik.org/course/73/syllabus
Task:
Если мы хотим посмотреть адрессацию по портам
Decision:
$ cat /proc/ioports
  0000-0cf7 : PCI Bus 0000:00
  0000-001f : dma1
  0020-0021 : pic1
  0040-0043 : timer0
  0050-0053 : timer1
  0060-0060 : keyboard
  0064-0064 : keyboard
  0070-0071 : rtc_cmos
0070-0071 : rtc0
  0080-008f : dma page reg
  00a0-00a1 : pic2
  00c0-00df : dma2
  00f0-00ff : fpu
  0170-0177 : 0000:00:01.1
0170-0177 : ata_piix
  01f0-01f7 : 0000:00:01.1
01f0-01f7 : ata_piix
  0376-0376 : 0000:00:01.1
0376-0376 : ata_piix
  03c0-03df : vga+
  03f6-03f6 : 0000:00:01.1
03f6-03f6 : ata_piix
0cf8-0cff : PCI conf1
0d00-ffff : PCI Bus 0000:00
  4000-403f : 0000:00:07.0
4000-4003 : ACPI PM1a_EVT_BLK
4004-4005 : ACPI PM1a_CNT_BLK
4008-400b : ACPI PM_TMR
4020-4021 : ACPI GPE0_BLK
  4100-410f : 0000:00:07.0
4100-4108 : piix4_smbus
  d000-d00f : 0000:00:01.1
d000-d00f : ata_piix
  d010-d01f : 0000:00:02.0
d010-d01f : vmwgfx probe
  d020-d027 : 0000:00:03.0
d020-d027 : e1000
  d040-d05f : 0000:00:04.0
  d100-d1ff : 0000:00:05.0
d100-d1ff : Intel 82801AA-ICH
  d200-d23f : 0000:00:05.0
d200-d23f : Intel 82801AA-ICH
  d240-d247 : 0000:00:0d.0
d240-d247 : ahci
  d248-d24b : 0000:00:0d.0
d248-d24b : ahci
  d250-d257 : 0000:00:0d.0
d250-d257 : ahci
  d258-d25b : 0000:00:0d.0
d258-d25b : ahci
  d260-d26f : 0000:00:0d.0
d260-d26f : ahci
Task:
а если в памяти
Decision:
$ cat /proc/iomem
00000000-00000fff : Reserved
00001000-0009fbff : System RAM
0009fc00-0009ffff : Reserved
000a0000-000bffff : PCI Bus 0000:00
000c0000-000c7fff : Video ROM
000e2000-000e2fff : Adapter ROM
000f0000-000fffff : Reserved
  000f0000-000fffff : System ROM
00100000-7ffeffff : System RAM
  6ee00000-6fc00e80 : Kernel code
  6fc00e81-706507bf : Kernel data
  7090b000-70dfffff : Kernel bss
7fff0000-7fffffff : ACPI Tables
80000000-fdffffff : PCI Bus 0000:00
  f0000000-f7ffffff : 0000:00:02.0
f0000000-f7ffffff : vmwgfx probe
  f8000000-f81fffff : 0000:00:02.0
f8000000-f81fffff : vmwgfx probe
  f8200000-f821ffff : 0000:00:03.0
f8200000-f821ffff : e1000
  f8400000-f87fffff : 0000:00:04.0
f8400000-f87fffff : vboxguest
  f8800000-f8803fff : 0000:00:04.0
  f8804000-f8804fff : 0000:00:06.0
f8804000-f8804fff : ohci_hcd
  f8805000-f8805fff : 0000:00:0b.0
f8805000-f8805fff : ehci_hcd
  f8806000-f8807fff : 0000:00:0d.0
f8806000-f8807fff : ahci
fec00000-fec00fff : Reserved
  fec00000-fec003ff : IOAPIC 0
fee00000-fee00fff : Local APIC
  fee00000-fee00fff : Reserved
fffc0000-ffffffff : Reserved
Task:
Cмотрим инфу о прерываниях. например какие процессы сейчас запущены
Decision:
$ cat /proc/interrupts
  CPU0     CPU1       
0:  1320048     555  IO-APIC-edge      timer
1:    10224       7  IO-APIC-edge      i8042
7:        0       0  IO-APIC-edge      parport0
8:        2       1  IO-APIC-edge      rtc
10:     3062     21  IO-APIC-fasteoi   acpi
12:      131      2  IO-APIC-edge      i8042
15:    47073      0  IO-APIC-edge      ide1
18:        0      1  IO-APIC-fasteoi   yenta
19:    31056      1  IO-APIC-fasteoi   libata, ohci1394
20:    19042      1  IO-APIC-fasteoi   eth0
21:    44052      1  IO-APIC-fasteoi   uhci_hcd:usb1, uhci_hcd:usb2,...
22:   188352      1  IO-APIC-fasteoi   ra0
23:   632444      1  IO-APIC-fasteoi   nvidia
24:     1585      1  IO-APIC-fasteoi   VIA82XX-MODEM, VIA8237
Task:
использовать утилиту dmesg для установления идентификаторов запросов прерываний, резервируемых для определенных устройств в процессе загрузки системы.
Decision:
$ dmesg | grep "irq 1[45]"
[ 28.930069] ata3: PATA max UDMA/133 cmd 0x1f0 ctl 0x3f6 bmdma 0x2090 irq 14
[ 28.930071] ata4: PATA max UDMA/133 cmd 0x170 ctl 0x376 bmdma 0x2098 irq 15
Task:
оценить загрузку CPU
Decision:
$ top
top - 08:00:51 up  2:02,  2 users,  load average: 0.15, 0.12, 0.09
Tasks: 189 total,   2 running, 187 sleeping,   0 stopped,   0 zombie
%Cpu(s):  0.2 us,  0.3 sy,  0.0 ni, 99.5 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
MiB Mem :   1987.0 total,     83.6 free,    932.0 used,    971.4 buff/cache
MiB Swap:   2048.0 total,   2033.7 free,     14.3 used.    864.9 avail Mem
PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
765 mysql     20   0 1733056 356604  38296 S   0.7  17.5   0:38.09 mysqld  
...
 15 root      20   0       0      0      0 S   0.0   0.0   0:00.00 cpuhp/1
В третьей строке приводится информация об использовании центрального процессора.
%Cpu(s):  0.2 us,  0.3 sy,  0.0 ni, 99.5 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
Task:
Как узнать, не нарушая работы программы, к каким системным библиотекам и ресурсам системы она обращается в ходе работы?
Decision:
$ awk '$NF!~/\.so/{next} {$0=$NF} !a[$0]++' /proc/$PID/maps
readelf --dynamic /usr/bin/vim | grep NEEDED
 0x0000000000000001 (NEEDED)             Shared library: [libm.so.6]
 0x0000000000000001 (NEEDED)             Shared library: [libtinfo.so.6]
 0x0000000000000001 (NEEDED)             Shared library: [libselinux.so.1]
 0x0000000000000001 (NEEDED)             Shared library: [libcanberra.so.0]
 0x0000000000000001 (NEEDED)             Shared library: [libacl.so.1]
 0x0000000000000001 (NEEDED)             Shared library: [libgpm.so.2]
 0x0000000000000001 (NEEDED)             Shared library: [libdl.so.2]
 0x0000000000000001 (NEEDED)             Shared library: [libpython3.8.so.1.0]
 0x0000000000000001 (NEEDED)             Shared library: [libpthread.so.0]
 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]
Task:
Нужно создать еще одну сетевую папку для общего доступа в системе Windows Server 2012 r2
Decision:
- создайте папку
- Давайте теперь назначим на эту папку разрешения - кликаем по ней правой кнопкой мыши - выбираем пункт "Свойства"
- Ставим галочку напротив надписи: открыть общий доступ к этой папке - добавить пользователей которые будут иметь доступ к этой папке с определенными правами - для того что бы выбрать конкретных пользователей из Active Directory нажмите вкладку "Разрешения"
- Мы попали в настройки разрешения общего доступа, чтобы выбрать пользователя который будет иметь доступ, нажмите "Добавить".
- Например, в AD мы создавали тестового пользователя с именем "Тест". Итак назначим учетной записи Тест полный доступ к этой папке, для этого введите имя "Тест" в поле выбираемых объектов после чего кликаем "Проверить имена". Так же добавляем еще один параметр для общего доступа, для этого нажмите ПКМ по папке и перейдите по пунктам: "Общий доступ" – "Отдельные люди" В появившимся окне в поле для ввода имени вводим "Тест" и кликаем "Добавить" (желательно в данной папке выставить пользователям права на Чтение и запись).
- Как только пользователь определился в чек-боксе разрешить выставим "Полный доступ к данной папке" и нажмем "Ок" Идентичную операцию проделываем с Администраторами
- Самое главное это путь к сетевой папке, для чего он нужен я расскажу чуть ниже, сейчас просто выберете "Свойства" сетевой папки и запомните "Сетевой путь"
- Итак, можно проверить сетевую папку в другом компьютере (другого пользователя)
Task:
Добавить в исключения ip 10.99.10.42. У клиента после перезагрузки сбрасываются настройки
Decision:
- dc-0-regedit-домены-thost-Accounts-thost1-IE11(Настройки)-Изменить (параметры)
Task:
Перемещение папки /var на другой физический диск
Decision:
$ lsblk
NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
...
sdc           8:32   0 931,5G  0 disk 
$ sudo fdisk /dev/sdc
...
Команда (m для справки): n
...
Выберите (по умолчанию - p):p
Номер раздела (1-4, default 1): 
Первый сектор (2048-1953525167, default 2048): 
Last sector, +/-sectors or +/-size{K,M,G,T,P} (2048-1953525167, default 1953525167): 
...
Do you want to remove the signature? [Y] Да/[N] Нет: Y
...
Команда (m для справки): w
$ lsblk
NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
...
sdc           8:32   0 931,5G  0 disk 
└─sdc1        8:33   0 931,5G  0 part 
$ sudo mkfs -t ext4 /dev/sdc1
mke2fs 1.46.5 (30-Dec-2021)
...
Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (262144 blocks): done
Writing superblocks and filesystem accounting information: done
$ sudo mount /dev/sdc1 /mnt
$ lsblk
NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
...
sdc           8:32   0 931,5G  0 disk 
└─sdc1        8:33   0 931,5G  0 part /mnt
$ shopt -s dotglob
$ sudo rsync -aulvXpogtr /var/* /mnt
sending incremental file list
...
total size is 63,868,813,893  speedup is 1.00
$ ls -Zd /var
system_u:object_r:var_t:s0 /var
$ ls -Zd /mnt
system_u:object_r:unlabeled_t:s0 /mnt
$ sudo chcon -t var_t /mnt
$ ls -Zd /mnt
system_u:object_r:var_t:s0 /mnt
$ sudo umount /mnt
$ sudo blkid | grep sdc
/dev/sdc1: UUID="823ae1fa-...-b71dbb654f1f" TYPE="ext4" PARTUUID="3d352be0-01"
$ sudo vim /etc/fstab
$ sudo cat /etc/fstab | grep ext4
UUID=823ae1fa-...-b71dbb654f1f   /var  ext4  defaults,noatime,nofail 0 2
$ sudo mv /var /var.back
$ sudo mkdir /var
$ sudo mount -av
/                        : ignored
...
/var                     : successfully mounted
$ ls /var
account  crash  ftp       lib    log         nis       run    yp
adm      db     games     local  lost+found  opt       spool
cache    empty  kerberos  lock   mail        preserve  tmp
$ lsblk
NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
...
sdc           8:32   0 931,5G  0 disk 
└─sdc1        8:33   0 931,5G  0 part /var
Source:
http://sysengineering.ru/notes/peremeschenie-papok-linux-na-drugoy-disk?ysclid=lisfix46x1712981898
https://losst.pro/kakuyu-fajlovuyu-sistemu-vybrat-dlya-linux?ysclid=lishte72fq279374732




















Task:
Поиск процессов, которые "держат" удаленные файлы
Decision:
$ lsof | grep deleted
  pulseaudi 2309                          ubuntu    6u      REG                0,1  67108864      34867 /memfd:pulseaudio (deleted)
  gnome-she 2601 2612 gmain               ubuntu   32r      REG                8,5     32768     414249 /home/ubuntu/.local/share/gvfs-metadata/root-91a6702b.log (deleted)
  ...
  Web\x20Co 4259 4279 ProfilerC           ubuntu   68r      REG                0,1     19462      49425 /memfd:mozilla-ipc (deleted)
  Web\x20Co 4259 4279 ProfilerC           ubuntu   69r      REG                0,1      9566      49427 /memfd:mozilla-ipc (deleted)
Task:
Как очистить раздел от мусора в командной строке?
Decision:
Это файлы с расширениями .tmp,.trace,*.out и файлы старше 7 дней
find /opt/test -iname "*.out" -daystart -atime +7 -exec rm {} \;
Запись в cron:
1 1 * * * /usr/bin/find /opt/test -iname "*.out" -daystart -atime +7 -exec rm {} \;
/opt/test замени на то где нужно чистить
Task:
Сделать резервное копирование диска через Acronis
Decision:
Для начала нам нужнa программа Stop SMS Uni Boot — Загрузочные образы CD & USB . Сборки имеют достаточное количество программ для работы с разделами HDD, восстановления системы, создания настроенного образа системы и для решения других проблем.
Установить образ на флешку можно через Rufus - Запускаемся через флешку - Тут в меню нужно выбрать HDD++ - Acronis - True image premium - Далее выбираем резервное копирование - диски - Выбираем нужный диск - Выбираем путь в обзоре, куда мы хотим сохранить копию диска - В следующем шаге параметра выбираем метод резервного копирования с режимом полное резервное копирование. По умолчанию стоит «инкрементное». Можно оставить этот метод. Но я выберу «полное». - Можно приступить, после чего пойдет загрузка.
Task:
устанавить винду 8 на жесткий диск через Acronis, Bootice Rus, WinNTSetup. После обновлю до винды 10
Decision:
У меня уже есть загрузочная флешка с нужными программами Acronis, Bootice Rus, WinNTSetup (ссылка на загрузочные образы — https://usbtor.ru/viewtopi-c.php?t=1728 ) и ISO образ с виндой 8.1.  - запуститься с загрузочной флешки в Boot Menu через bios. -  Откроем выбор дополнительных программ -Акронис в меню Hdd ++ - Acronis - Acronis Disk Director - Очистим диск - Инициализировать - Создать том - Выбираем размер создаваемого тома - Выбираем тип тома: Основной: активный - Если нужен второй том, тогда после создания основного тома создаем еще один том и выбираем логический тип тома. Но мне не нужен второй том, поэтому я пропускаю данную функцию - Завершить и применить ожидающие операции - Перезагрузимся - также с флешки и откроем 78setup -тут же нажмем Windows NT Setup - правильно выбрать диск, на который будет установлен загрузчик, в моем случае, это новый том Q - отформатируем его - Еще мы видим, что МБР горит желтым - 78setup - Booti-ce Rus - Physi-cal disk - правильный диск назначения (в моем случае это том Q) - в управлении MBR ставим галочку на Windows NT - Инсталяция/конфигурация - выбираем Windows NT 6.x MBR - 78setup - WIndows NT Setup -путь к установочным файлам Windows - прописываем тот путь где находится сам файл с Wim образом windows. - диск на который будет установлена ОС - выбираем нужный диск. В моем случае диск Q.- Установка. - перезапускаемся - установка винды 8.1 -Настраиваем часовой пояс - Придумываем имя компа - Имя пользователя, если нужно пароли - Ждем завершение настроек
Task:
Клонирование дисков
Представьте, что у вас есть два флеш-диска USB одинакового размера и вам нужно создать точную копию первого диска на втором. Допустим, что после подключения к компьютеру им назначаются имена устройств /dev/sdb и /dev/sdc соответственно. То есть нужно скопировать содержимое первого диска на второй.
Decision:
# dd if=/dev/sdb of=/dev/sdc
Task:
Как вариант, если к компьютеру подключено только первое устройство, можно скопировать его содержимое в обычный файл, который впоследствии использовать для восстановления или копирования
Decision:
# dd if=/dev/sdc of=flash_drive.img
Task:
Просмотр списка смонтированных файловых систем
Для монтирования файловых систем вывести список файловых систем, смонтированных в настоящий момент
Для первого эксперимента возьмем флешку. Сначала посмотрим, что имеется в системе, перед тем как вставить флешку:
Decision:
~$ mount
  sysfs on /sys type sysfs (rw)
  proc on /proc type proc (rw)
  udev on /dev type devtmpfs (rw)
  ...
  /dev/fuse on /run/user/1000/doc type fuse (rw)
  tmpfs on /run/snapd/ns type tmpfs (rw)
  nsfs on /run/snapd/ns/snap-store.mnt type nsfs (rw)
Task:
Вставим флешку
Decision:
~$ mount
  sysfs on /sys type sysfs (rw)
  proc on /proc type proc (rw)
  udev on /dev type devtmpfs (rw)
  ...
  /dev/fuse on /run/user/1000/doc type fuse (rw)
  tmpfs on /run/snapd/ns type tmpfs (rw)
  nsfs on /run/snapd/ns/snap-store.mnt type nsfs (rw)
  /dev/sdc1 on /media/asus/BOOT_MENU type vfat (rw,nosuid,nodev,relatime,uid=1000,gid=1000,fmask=0022,dmask=0022,codepage=437,iocharset=iso8859-1,shortname=mixed,showexec,utf8,flush,errors=remount-ro,uhelper=udisks2)
Task:
Теперь, когда мы знаем имя устройства флешки, размонтируем ее и повторно смонтируем его в другой каталог в дереве файловой системы.
Decision:
# umount /dev/sdc1
Task:
Создать новую точку монтирования диска.
Decision:
# mkdir /mnt/flash
# ls /mnt
  flash
Task:
Смонтируем флешку в новую точку монтирования.
Decision:
# mount -t vfat /dev/sdc1 /mnt/flash
# cd /mnt/flash/
/mnt/flash# ls
  '???'          autorun.inf   bootmgr       efi      'System Volume Information'
   autorun.ico   boot          bootmgr.efi   sources
# umount /dev/sdc1
Task:
Создание образа-копии компакт-диска
у нас есть компакт-диск с дистрибутивом Ubuntu, и мы хотим создать файл ISO-образа, который потом можно будет использовать для создания нескольких копий.
Decision:
Вставив компакт-диск в привод CD-ROM и определив имя устройства (пусть это будет /dev/cdrom), мы сможем создать файл ISO-образа следующим способом:
~$ dd if=/dev/cdrom of=ubuntu.iso
  119104+0 records in
  119104+0 records out
  60981248 bytes (61 MB, 58 MiB) copied, 2.66461 s, 22.9 MB/s
Task:
Создание образа из коллекции файлов
Создать файл ISO-образа, включающий содержимое некоего каталога с помощью программы enisoimage
Decision:
сначала создадим каталог (~/folder) со всеми необходимыми файлами для включения в образ:
~$ ls folder
  1.txt  3.txt
~$ genisoimage -o folder.iso -R -J ~/folder
  I: -input-charset not specified, using utf-8 (detected in locale settings)
  Total translation table size: 0
  Total rockridge attributes bytes: 323
  Total directory bytes: 474
  Path table size(bytes): 10
  Max brk space used 0
  181 extents written (0 MB)
~$ ls -l folder.iso
  -rw-rw-r-- 1 s s 370688 Nov 18 20:14 folder.iso
Task:
Сетевая файловая система - NFS
Скорее всего NFS уже есть в системе. Если же nfs в системе не обнаружен то ставим из репозитория
Decision:
[tuser1@thost1 Centos]# yum list | grep nfs
[tuser1@thost1 Centos]# yum -y install nfs-utils
[tuser1@thost1 Centos]# systemctl enable nfs-s.
[tuser1@thost1 Centos]# systemctl start nfs-s
[tuser1@thost1 Centos]# systemctl status nfs-s
Task:
В своей работе NFS использует RPC-вызовы, а значит работоспособность службы можно проверить с помощью portmapper (он тоже должен быть запущен на сервере где выполняются программы использующие RPC Calls).
Decision:
[tuser1@thost1 Centos]# rpcinfo -p localhost | grep nfs
  100003 3 tcp 2049 nfs
  100003 4 tcp 2049 nfs
  100227 3 tcp 2049 nfs_acl
[tuser1@thost1 Centos]# rpcinfo -p localhost
  program vers proto port service
  100000 4 tcp 111 portmapper
  100000 3 tcp 111 portmapper
  100000 2 tcp 111 portmapper
  100000 4 udp 111 portmapper
  100000 3 udp 111 portmapper
  100000 2 udp 111 portmapper
  100005 1 udp 20048 mountd
  100005 1 tcp 20048 mountd
  100005 2 udp 20048 mountd
  100005 2 tcp 20048 mountd
  100005 3 udp 20048 mountd
  100005 3 tcp 20048 mountd
  100024 1 udp 35314 status
  100024 1 tcp 45161 status
  100003 3 tcp 2049 nfs
  100003 4 tcp 2049 nfs
  100227 3 tcp 2049 nfs_acl
  100021 1 udp 48717 nlockmgr
  100021 3 udp 48717 nlockmgr
  100021 4 udp 48717 nlockmgr
  100021 1 tcp 35773 nlockmgr
  100021 3 tcp 35773 nlockmgr
  100021 4 tcp 35773 nlockmgr
Task:
Сделаем так чтобы при включении thost3 автоматически монтировался. разрешим монтировать /home на сервере tip в режиме rw. То есть, что вы хотите отдавать(home), кому (tip), какие права (rw).
Decision:
tuser3@thost3:~# ifconfig
  ...
  tip
  ...
[tuser1@thost1 Centos]# vim /etc/exports
[tuser1@thost1 Centos]# cat /etc/exports
/home tip(rw,no_root_squash)
Task:
Проверим список экспортированных файловая система
Decision:
[tuser1@thost1 Centos]# exportfs
Task:
Перечитываем файл чтобы внесенные изменения начали действовать.
Decision:
[tuser1@thost1 Centos]# exportfs -r
Task:
Проверим список экспортированных файловая система
Decision:
[tuser1@thost1 Centos]# exportfs
  /home tip
Task:
Теперь на сервере tip попробуем примонтировать файловая система /home экспортированную на 192.168.0.104. Создаем каталог куда будем монтировать
Decision:
tuser3@thost3:~# mkdir /mnt/nfs
Task:
Монитруем
Decision:
[tuser1@thost1 Centos]# ifconfig
  ...
  192.168.0.104
  ...
[tuser1@thost1 Centos]# ls -l /home
  итого 8
  drwx------. 3 bestuser bestuser 92 апр 10 00:34 bestuser
  drwx------. 18 Centos Centos 4096 апр 26 20:44 Centos
  drwx------. 3 dmosk dmosk 113 апр 18 00:46 dmosk
  drwx------. 4 sk sk 145 апр 20 22:50 sk
  drwx------. 8 user1 user1 4096 апр 24 09:58 user1
  drwx------. 3 user3 managers 113 апр 18 00:28 user3
  drwx------. 4 webby webby 111 апр 24 09:58 webby
tuser3@thost3:~# mount -t nfs 192.168.0.104:/home /mnt/nfs
  mount: /mnt/nfs: bad option; for several filesystems (e.g. nfs, cifs) you might need a /sbin/mount.<type> helper program.
tuser3@thost3:~# apt-get -y install nfs-common
tuser3@thost3:~# mount -t nfs 192.168.0.104:/home /mnt/nfs
  mount.nfs: Connection timed out
Task:
Видим, что не пропускают нас, потому что мы не настроили правила iptables. исправим это
Decision:
tuser3@thost3:~# nmap 192.168.0.104
  Starting Nmap 7.60 ( https://nmap.org ) at 2020-04-27 05:05 MSK
  Nmap scan report for thost1 (192.168.0.104)
  Host is up (0.0011s latency).
  Not shown: 992 filtered ports
  PORT STATE SERVICE
  21/tcp open ftp
  22/tcp open ssh
  23/tcp open telnet
  25/tcp closed smtp
  53/tcp closed domain
  80/tcp closed http
  143/tcp closed imap
  443/tcp closed https
  MAC Address: 08:00:27:77:A2:2C (Oracle VirtualBox virtual NIC)
  Nmap done: 1 IP address (1 host up) scanned in 16.81 seconds
[tuser1@thost1 Centos]# cat /etc/sysconfig/iptables
Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
*security
:INPUT ACCEPT [3250:11558237]
:FORWARD ACCEPT [0:0]
:Сonclusion ACCEPT [3352:417020]
COMMIT
# Completed on Sun Apr 12 01:33:36 2020
# Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
*raw
:PREROUTING ACCEPT [13311:12009098]
:Сonclusion ACCEPT [3352:417020]
COMMIT
# Completed on Sun Apr 12 01:33:36 2020
# Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
*mangle
:PREROUTING ACCEPT [13310:12009046]
:INPUT ACCEPT [13310:12009046]
:FORWARD ACCEPT [0:0]
:Сonclusion ACCEPT [3352:417020]
:POSTROUTING ACCEPT [3354:417084]
COMMIT
# Completed on Sun Apr 12 01:33:36 2020
# Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
*nat
:PREROUTING ACCEPT [10075:443825]
:INPUT ACCEPT [66:2904]
:POSTROUTING ACCEPT [324:21812]
:Сonclusion ACCEPT [324:21812]
COMMIT
# Completed on Sun Apr 12 01:33:36 2020
# Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
*filter
:INPUT DROP [7022:316384]
:FORWARD DROP [0:0]
:Сonclusion DROP [2480:339285]
-A INPUT -i lo -j ACCEPT
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p tcp -m multiport --dports 21 -j ACCEPT
-A INPUT -p tcp -m multiport --dports 22 -j ACCEPT
-A INPUT -p tcp -m state --state NEW --dport 23 -j ACCEPT
-A INPUT -p tcp -m multiport --dports 25 -j ACCEPT
-A INPUT -p tcp -m multiport --dports 53 -j ACCEPT
-A INPUT -p tcp -m multiport --dports 80 -j ACCEPT
-A INPUT -p tcp -m multiport --dports 143 -j ACCEPT
-A INPUT -p tcp -m multiport --dports 443 -j ACCEPT
-A INPUT -p udp -m multiport --dports 53 -j ACCEPT
-A INPUT -p udp -m multiport --dports 21 -j ACCEPT
-A INPUT -p udp -m multiport --dports 20 -j ACCEPT
-A INPUT -p udp -m multiport --dports 69 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 0 -j ACCEPT
-A Сonclusion -o lo -j ACCEPT
-A Сonclusion -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT
COMMIT
# Completed on Sun Apr 12 01:33:36 2020
[tuser1@thost1 Centos]# vim /etc/sysconfig/iptables
[tuser1@thost1 Centos]# cat /etc/sysconfig/iptables
Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
*security
:INPUT ACCEPT [3250:11558237]
:FORWARD ACCEPT [0:0]
:Сonclusion ACCEPT [3352:417020]
COMMIT
# Completed on Sun Apr 12 01:33:36 2020
# Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
*raw
:PREROUTING ACCEPT [13311:12009098]
:Сonclusion ACCEPT [3352:417020]
COMMIT
# Completed on Sun Apr 12 01:33:36 2020
# Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
*mangle
:PREROUTING ACCEPT [13310:12009046]
:INPUT ACCEPT [13310:12009046]
:FORWARD ACCEPT [0:0]
:Сonclusion ACCEPT [3352:417020]
:POSTROUTING ACCEPT [3354:417084]
COMMIT
# Completed on Sun Apr 12 01:33:36 2020
# Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
*nat
:PREROUTING ACCEPT [10075:443825]
:INPUT ACCEPT [66:2904]
:POSTROUTING ACCEPT [324:21812]
:Сonclusion ACCEPT [324:21812]
COMMIT
# Completed on Sun Apr 12 01:33:36 2020
# Generated by xtables-save v1.8.2 on Sun Apr 12 01:33:36 2020
*filter
:INPUT DROP [7022:316384]
:FORWARD DROP [0:0]
:Сonclusion DROP [2480:339285]
-A INPUT -i lo -j ACCEPT
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p tcp -m multiport --dports 21 -j ACCEPT
-A INPUT -p tcp -m multiport --dports 22 -j ACCEPT
-A INPUT -p tcp -m state --state NEW --dport 23 -j ACCEPT
-A INPUT -p tcp -m multiport --dports 25 -j ACCEPT
-A INPUT -p tcp -m multiport --dports 53 -j ACCEPT
-A INPUT -p tcp -m multiport --dports 80 -j ACCEPT
-A INPUT -p tcp -m multiport --dports 143 -j ACCEPT
-A INPUT -p tcp -m multiport --dports 443 -j ACCEPT
-A INPUT -p tcp -m multiport --dports 2049 -j ACCEPT
-A INPUT -p udp -m multiport --dports 53 -j ACCEPT
-A INPUT -p udp -m multiport --dports 21 -j ACCEPT
-A INPUT -p udp -m multiport --dports 20 -j ACCEPT
-A INPUT -p udp -m multiport --dports 69 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 0 -j ACCEPT
-A Сonclusion -o lo -j ACCEPT
-A Сonclusion -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT
COMMIT
# Completed on Sun Apr 12 01:33:36 2020
[tuser1@thost1 Centos]# systemctl restart iptables.service
tuser3@thost3:~# nmap 192.168.0.104
  Starting Nmap 7.60 ( https://nmap.org ) at 2020-04-27 05:08 MSK
  Nmap scan report for thost1 (192.168.0.104)
  Host is up (0.0012s latency).
  Not shown: 991 filtered ports
  PORT STATE SERVICE
  21/tcp open ftp
  22/tcp open ssh
  23/tcp open telnet
  25/tcp closed smtp
  53/tcp closed domain
  80/tcp closed http
  143/tcp closed imap
  443/tcp closed https
  2049/tcp open nfs
  MAC Address: 08:00:27:77:A2:2C (Oracle VirtualBox virtual NIC)
  Nmap done: 1 IP address (1 host up) scanned in 21.98 seconds
tuser3@thost3:~# mount -t nfs 192.168.0.104:/home /mnt/nfs
Task:
Теперь проверим каталоги у двух систем.
Decision:
tuser3@thost3:~# ls -l /mnt/nfs
  итого 8
  drwx------ 3 1001 1001 92 апр 10 07:34 bestuser
  drwx------ 18 linux linux 4096 апр 27 03:44 Centos
  drwx------ 3 1004 1005 113 апр 18 07:46 dmosk
  drwx------ 4 1006 1007 145 апр 21 05:50 sk
  drwx------ 8 1002 1002 4096 апр 24 16:58 user1
  drwx------ 3 1003 1003 113 апр 18 07:28 user3
  drwx------ 4 1007 1008 111 апр 24 16:58 webby
[tuser1@thost1 Centos]# ls -l /home
  итого 8
  drwx------. 3 bestuser bestuser 92 апр 10 00:34 bestuser
  drwx------. 18 Centos Centos 4096 апр 26 20:44 Centos
  drwx------. 3 dmosk dmosk 113 апр 18 00:46 dmosk
  drwx------. 4 sk sk 145 апр 20 22:50 sk
  drwx------. 8 user1 user1 4096 апр 24 09:58 user1
  drwx------. 3 user3 managers 113 апр 18 00:28 user3
  drwx------. 4 webby webby 111 апр 24 09:58 webby
[tuser1@thost1 Centos]# vim /home/myestfile.txt
[tuser1@thost1 Centos]# cat /home/myestfile.txt
  hust text
[tuser1@thost1 Centos]# ls -l /home
  итого 12
  drwx------. 3 bestuser bestuser 92 апр 10 00:34 bestuser
  drwx------. 18 Centos Centos 4096 апр 26 20:44 Centos
  drwx------. 3 dmosk dmosk 113 апр 18 00:46 dmosk
  -rw-r--r--. 1 root root 10 апр 26 22:17 myestfile.txt
  drwx------. 4 sk sk 145 апр 20 22:50 sk
  drwx------. 8 user1 user1 4096 апр 24 09:58 user1
  drwx------. 3 user3 managers 113 апр 18 00:28 user3
  drwx------. 4 webby webby 111 апр 24 09:58 webby
tuser3@thost3:~# ls -l /mnt/nfs
  итого 12
  drwx------ 3 1001 1001 92 апр 10 07:34 bestuser
  drwx------ 18 linux linux 4096 апр 27 03:44 Centos
  drwx------ 3 1004 1005 113 апр 18 07:46 dmosk
  -rw-r--r-- 1 root root 10 апр 27 05:17 myestfile.txt
  drwx------ 4 1006 1007 145 апр 21 05:50 sk
  drwx------ 8 1002 1002 4096 апр 24 16:58 user1
  drwx------ 3 1003 1003 113 апр 18 07:28 user3
  drwx------ 4 1007 1008 111 апр 24 16:58 webby
Task:
Посмотрим, что примонтированно в системе
Decision:
tuser3@thost3:~# mount
  ...
  192.168.0.104:/home on /mnt/nfs type nfs4 (rw,relatime,vers=4.2,rsize=524288,wsize=524288,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,clientaddr=tip,local_lock=none,addr=192.168.0.104)
tuser3@thost3:~# vim /mnt/nfs/myestfile.txt
tuser3@thost3:~# cat /mnt/nfs/myestfile.txt
  hust text
  new line
[tuser1@thost1 Centos]# cat /home/myestfile.txt
  hust text
  new line
Task:
Если файловая система экспортированы на сервере который работает круглосуточно (24 часа в сутки)б то монтирование разделов можно добавить в конце /etc/fstab тем самым автоматизировав процедуру при старте компьютера.
Decision:
[tuser1@thost1 Centos]# ifconfig
  ...
  192.168.0.104
  ...
tuser3@thost3:~# cat /etc/fstab
/etc/fstab: static file system information.
#
# Use 'blkid' to print the universally unique identifier for a
# device; this may be used with UUID= as a more robust way to name devices
# that works even if disks are added and removed. See fstab(5).
#
# <file system> <mount point> <type> <options> <dump> <pass>
# / was on /dev/sda1 during installation
UUID=4020996d-6502-4a36-b7bc-aec4a74d5aa9 / ext4 errors=remount-ro 0 1
/swapfile none swap sw 0 0
tuser3@thost3:~# vim /etc/fstab
tuser3@thost3:~# cat /etc/fstab
/etc/fstab: static file system information.
#
# Use 'blkid' to print the universally unique identifier for a
# device; this may be used with UUID= as a more robust way to name devices
# that works even if disks are added and removed. See fstab(5).
#
# <file system> <mount point> <type> <options> <dump> <pass>
# / was on /dev/sda1 during installation
UUID=4020996d-6502-4a36-b7bc-aec4a74d5aa9 / ext4 errors=remount-ro 0 1
/swapfile none swap sw 0 0
192.168.0.104:/home /mnt/nfs nfs defaults 0 0
Task:
Еще пример
Decision:
tuser3@thost3:~# mkdir /mnt/share
tuser3@thost3:~# vim /mnt/share/share.txt
tuser3@thost3:~# cat /mnt/share/share.txt
  for share
tuser3@thost3:~# apt list | grep nfs
  ...
  nfs-common/bionic-updates,now 1:1.3.4-2.1ubuntu5.2 amd64 [установлен]
  ...
  nfs-kernel-s/bionic-updates 1:1.3.4-2.1ubuntu5.2 amd64
  ...
tuser3@thost3:~# apt install -y nfs-kernel-s
tuser3@thost3:~# systemctl enable nfs-kernel-s
  Synchronizing state of nfs-kernel-s.service with SysV service script with /lib/systemd/systemd-sysv-install.
  Executing: /lib/systemd/systemd-sysv-install enable nfs-kernel-s
tuser3@thost3:~# systemctl start nfs-kernel-s
tuser3@thost3:~# systemctl status nfs-kernel-s
  ● nfs-s.service - NFS s and services
  Loaded: loaded (/lib/systemd/system/nfs-s.service; enabled; vendor preset: enabled)
  Active: active (exited) since Mon 2020-04-27 05:34:56 MSK; 2min 14s ago
  Main PID: 5681 (code=exited, status=0/SUCCESS)
  Tasks: 0 (limit: 2327)
  CGroup: /system.slice/nfs-s.service
  апр 27 05:34:54 thost3 systemd[1]: Starting NFS s and services...
  апр 27 05:34:56 thost3 systemd[1]: Started NFS s and services.
Task:
Здесь допустим нету никаких секретов, поэтому сделаем этот файл доcтупным для всех. то есть всем разрешено его монтировать
Decision:
tuser3@thost3:~# rpcinfo -p localhost
  program vers proto port service
  100000 4 tcp 111 portmapper
  100000 3 tcp 111 portmapper
  100000 2 tcp 111 portmapper
  100000 4 udp 111 portmapper
  100000 3 udp 111 portmapper
  100000 2 udp 111 portmapper
  100005 1 udp 33609 mountd
  100005 1 tcp 35179 mountd
  100005 2 udp 53486 mountd
  100005 2 tcp 36927 mountd
  100005 3 udp 51351 mountd
  100005 3 tcp 48353 mountd
  100003 3 tcp 2049 nfs
  100003 4 tcp 2049 nfs
  100227 3 tcp 2049
  100003 3 udp 2049 nfs
  100227 3 udp 2049
  100021 1 udp 55641 nlockmgr
  100021 3 udp 55641 nlockmgr
  100021 4 udp 55641 nlockmgr
  100021 1 tcp 45397 nlockmgr
  100021 3 tcp 45397 nlockmgr
  100021 4 tcp 45397 nlockmgr
tuser3@thost3:~# vim /etc/exports
tuser3@thost3:~# cat /etc/exports
/mnt/share *(rw)
tuser3@thost3:~# exportfs -r
  exportfs: /etc/exports [1]: Neither 'subtree_check' or 'no_subtree_check' specified for export "*:/mnt/share".
  Assuming default behaviour ('no_subtree_check').
  NOTE: this default has changed since nfs-utils version 1.0.x
tuser3@thost3:~# exportfs
  /mnt/share <world>
tuser3@thost3:~# ifconfig
  ...
  tip
  ...
[tuser1@thost1 Centos]# ls -l /mnt/
  итого 0
[tuser1@thost1 Centos]# mount -t nfs tip:/mnt/share /mnt
[tuser1@thost1 Centos]# ls -l /mnt/
  итого 4
  -rw-r--r--. 1 root root 10 апр 26 22:27 share.txt
Task:
Создайте директорию ~/myfiles, скопируйте туда /etc/passwd и /etc/group. Создайте раздел с файловая система ext4. Перенесите данные из директории myfiles на эту файловую систему. Настройте автомонтирование этой файловой системы в эту директорию.
Decision:
[tuser1@thost1 Centos]#  mkdir  ~/myfiles
[tuser1@thost1 Centos]#  cp /etc/passwd ~/myfiles
[tuser1@thost1 Centos]#  cp /etc/group ~/myfiles
[tuser1@thost1 Centos]#  ls -l myfiles/
  total 8
  -rw-r--r--. 1 cs cs 1457 Feb 10 10:24 group
  -rw-r--r--. 1 cs cs 3614 Feb 10 10:24 passwd
[tuser1@thost1 Centos]#  sudo mkfs.ext4 /dev/sdb1
  mke2fs 1.45.6 (20-Mar-2020)
  Creating filesystem with 51200 1k blocks and 12824 inodes
  Filesystem UUID: 8f4688cc-def1-44aa-9fc5-7c1793fda09c
  Superblock backups stored on blocks:
      8193, 24577, 40961
  Allocating group tables: done
  Writing inode tables: done
  Creating journal (4096 blocks): done
  Writing superblocks and filesystem accounting information: done
[tuser1@thost1 Centos]#  sudo tune2fs -l /dev/sdb1
  tune2fs 1.45.6 (20-Mar-2020)
  Filesystem volume name:   <none>
  Last mounted on:          <not available>
  Filesystem UUID:          8f4688cc-def1-44aa-9fc5-7c1793fda09c
  Filesystem magic number:  0xEF53
  Filesystem revision #:    1 (dynamic)
  Filesystem features:      has_journal ext_attr resize_inode dir_index filetype extent 64bit flex_bg sparse_super large_file huge_file dir_nlink extra_isize metadata_csum
  Filesystem flags:         signed_directory_hash
  Default mount options:    user_xattr acl
  Filesystem state:         clean
  Errors behavior:          Continue
  Filesystem OS type:       Linux
  Inode count:              12824
  Block count:              51200
  Reserved block count:     2560
  Free blocks:              44440
  Free inodes:              12813
  First block:              1
  Block size:               1024
  Fragment size:            1024
  Group descriptor size:    64
  Reserved GDT blocks:      256
  Blocks per group:         8192
  Fragments per group:      8192
  Inodes per group:         1832
  Inode blocks per group:   229
  Flex block group size:    16
  Filesystem created:       Thu Feb 10 10:30:30 2022
  Last mount time:          n/a
  Last write time:          Thu Feb 10 10:30:30 2022
  Mount count:              0
  Maximum mount count:      -1
  Last checked:             Thu Feb 10 10:30:30 2022
  Check interval:           0 (<none>)
  Lifetime writes:          278 kB
  Reserved blocks uid:      0 (user root)
  Reserved blocks gid:      0 (group root)
  First inode:              11
  Inode size:               128
  Journal inode:            8
  Default directory hash:   half_md4
  Directory Hash Seed:      334a5650-55c0-4327-97ce-256db7bb0bba
  Journal backup:           inode blocks
  Checksum type:            crc32c
  Checksum:                 0x656632a3
  разлогиниться - ctl+alt+f3
[tuser1@thost1 Centos]#  lsof +D /home/cs/myfiles/
[tuser1@thost1 Centos]#  du -h /home/cs/myfiles/
  8.0K    /home/cs/myfiles/
[tuser1@thost1 Centos]#  fdisk -l /dev/sdb1
  Disk /dev/sdb1: 50 MiB, 52428800 bytes, 102400 sectors
  Units: sectors of 1 * 512 = 512 bytes
  Sector size (logical/physical): 512 bytes / 512 bytes
  I/O size (minimum/optimal): 512 bytes / 512 bytes
[tuser1@thost1 Centos]#  mount /dev/sdb1 /mnt/
[tuser1@thost1 Centos]#  df -h
  Filesystem           Size  Used Avail Use% Mounted on
  devtmpfs             881M     0  881M   0% /dev
  tmpfs                909M     0  909M   0% /dev/shm
  tmpfs                909M  9.1M  900M   2% /run
  tmpfs                909M     0  909M   0% /sys/fs/cgroup
  /dev/mapper/cl-root   47G  5.5G   42G  12% /
  /dev/sda1           1014M  346M  669M  35% /boot
  Downloads            931G  321G  611G  35% /media/sf_Downloads
  tmpfs                182M   12K  182M   1% /run/user/42
  tmpfs                182M     0  182M   0% /run/user/0
  /dev/sdb1             45M  1.1M   40M   3% /mnt
[tuser1@thost1 Centos]#  mv -v /home/cs/myfiles/* /mnt
  copied '/home/cs/myfiles/group' -> '/mnt/group'
  removed '/home/cs/myfiles/group'
  copied '/home/cs/myfiles/passwd' -> '/mnt/passwd'
  removed '/home/cs/myfiles/passwd'
[tuser1@thost1 Centos]#  ll /mnt /home/cs/myfiles/
  /home/cs/myfiles/:
  total 0
  /mnt:
  total 20
  -rw-r--r--. 1 cs cs  1457 Feb 10 10:24 group
  drwx------. 2 root   root   12288 Feb 10 10:30 lost+found
  -rw-r--r--. 1 cs cs  3614 Feb 10 10:24 passwd
[tuser1@thost1 Centos]#  ll /mnt/
  total 20
  -rw-r--r--. 1 cs cs  1457 Feb 10 10:24 group
  drwx------. 2 root   root   12288 Feb 10 10:30 lost+found
  -rw-r--r--. 1 cs cs  3614 Feb 10 10:24 passwd
[tuser1@thost1 Centos]#  du -h /mnt | tail -1
  21K     /mnt
[tuser1@thost1 Centos]#  cat /etc/fstab
#
# /etc/fstab
# Created by anaconda on Fri Jan 14 04:46:51 2022
#
# Accessible filesystems, by reference, are maintained under '/dev/disk/'.
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info.
#
# After editing this file, run 'systemctl daemon-reload' to update systemd
# units generated from this file.
#
/dev/mapper/cl-root     /                       xfs     defaults        0 0
UUID=8ec77867-4190-4bad-b7a5-98c12e4f3a5e /boot                   xfs     defaults        0 0
/dev/mapper/cl-swap     none                    swap    defaults        0 0
[tuser1@thost1 Centos]#  blkid /dev/sdb1
  /dev/sdb1: UUID="8f4688cc-def1-44aa-9fc5-7c1793fda09c" BLOCK_SIZE="1024" TYPE="ext4" PARTUUID="87f777ab-01"
[tuser1@thost1 Centos]#  blkid /dev/sdb1 | cut -d' ' -f2
  UUID="8f4688cc-def1-44aa-9fc5-7c1793fda09c"
[tuser1@thost1 Centos]#  cp /etc/fstab{,.bkp}
[tuser1@thost1 Centos]#  ls -l /etc/fstab*
  -rw-r--r--. 1 root root 579 Jan 14 12:46 /etc/fstab
  -rw-r--r--. 1 root root 579 Feb 10 10:56 /etc/fstab.bkp
[tuser1@thost1 Centos]#  blkid /dev/sdb1 | cut -d' ' -f2 >> /etc/fstab
[tuser1@thost1 Centos]#  cat /etc/fstab
#
# /etc/fstab
# Created by anaconda on Fri Jan 14 04:46:51 2022
#
# Accessible filesystems, by reference, are maintained under '/dev/disk/'.
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info.
#
# After editing this file, run 'systemctl daemon-reload' to update systemd
# units generated from this file.
#
/dev/mapper/cl-root     /                       xfs     defaults        0 0
UUID=8ec77867-4190-4bad-b7a5-98c12e4f3a5e /boot                   xfs     defaults        0 0
/dev/mapper/cl-swap     none                    swap    defaults        0 0
UUID="8f4688cc-def1-44aa-9fc5-7c1793fda09c"
[tuser1@thost1 Centos]#  vim /etc/fstab
[tuser1@thost1 Centos]#  cat /etc/fstab
#
# /etc/fstab
# Created by anaconda on Fri Jan 14 04:46:51 2022
#
# Accessible filesystems, by reference, are maintained under '/dev/disk/'.
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info.
#
# After editing this file, run 'systemctl daemon-reload' to update systemd
# units generated from this file.
#
/dev/mapper/cl-root     /                       xfs     defaults        0 0
UUID=8ec77867-4190-4bad-b7a5-98c12e4f3a5e /boot                   xfs     defaults        0 0
/dev/mapper/cl-swap     none                    swap    defaults        0 0
UUID="8f4688cc-def1-44aa-9fc5-7c1793fda09c" /home/cs/myfiles ext4 defaults,auto 0 1
[tuser1@thost1 Centos]#  df -h
Filesystem           Size  Used Avail Use% Mounted on
devtmpfs             881M     0  881M   0% /dev
tmpfs                909M     0  909M   0% /dev/shm
tmpfs                909M  9.1M  900M   2% /run
tmpfs                909M     0  909M   0% /sys/fs/cgroup
/dev/mapper/cl-root   47G  5.5G   42G  12% /
/dev/sda1           1014M  346M  669M  35% /boot
Downloads            931G  321G  611G  35% /media/sf_Downloads
tmpfs                182M   12K  182M   1% /run/user/42
tmpfs                182M     0  182M   0% /run/user/0
/dev/sdb1             45M  1.1M   40M   3% /mnt
[tuser1@thost1 Centos]#  mount /home/cs/myfiles
  mount: /home/cs/myfiles: /dev/sdb1 already mounted on /mnt.
  залогиниться - ctl+f1
[tuser1@thost1 Centos]#  df -h
  Filesystem           Size  Used Avail Use% Mounted on
  devtmpfs             881M     0  881M   0% /dev
  tmpfs                909M     0  909M   0% /dev/shm
  tmpfs                909M  9.2M  900M   2% /run
  tmpfs                909M     0  909M   0% /sys/fs/cgroup
  /dev/mapper/cl-root   47G  5.5G   42G  12% /
  /dev/sda1           1014M  346M  669M  35% /boot
  /dev/sdb1             45M  1.1M   40M   3% /home/cs/myfiles
  Downloads            931G  321G  610G  35% /media/sf_Downloads
  tmpfs                182M   12K  182M   1% /run/user/42
  tmpfs                182M  4.0K  182M   1% /run/user/1000
Task:
Создайте директорию ~/mybackup. Создайте раздел с файловая система xfs, временно примонтируйте файловая система в директорию mybackup и перенесите данные из ~/myfiles на эту файловую систему. Отмонтируйте файловая система.
Decision:
[tuser1@thost1 Centos]#  mkdir ~/mybackup
[tuser1@thost1 Centos]#  lsof +D /home/cs/mybackup/
[tuser1@thost1 Centos]#  du -h /home/cs/mybackup/
  0       /home/cs/mybackup/
[tuser1@thost1 Centos]#  fdisk -l /dev/sdb2
  Disk /dev/sdb2: 50 MiB, 52428800 bytes, 102400 sectors
  Units: sectors of 1 * 512 = 512 bytes
  Sector size (logical/physical): 512 bytes / 512 bytes
  I/O size (minimum/optimal): 512 bytes / 512 bytes
[tuser1@thost1 Centos]#  mkfs.xfs /dev/sdb2
  meta-data=/dev/sdb2              isize=512    agcount=2, agsize=6400 blks
       =                       sectsz=512   attr=2, projid32bit=1
       =                       crc=1        finobt=1, sparse=1, rmapbt=0
       =                       reflink=1
  data     =                       bsize=4096   blocks=12800, imaxpct=25
       =                       sunit=0      swidth=0 blks
  naming   =version 2              bsize=4096   ascii-ci=0, ftype=1
  log      =internal log           bsize=4096   blocks=1368, version=2
       =                       sectsz=512   sunit=0 blks, lazy-count=1
  realtime =none                   extsz=4096   blocks=0, rtextents=0
[tuser1@thost1 Centos]#  mount /dev/sdb2 /mnt/
[tuser1@thost1 Centos]#  df -h
  Filesystem           Size  Used Avail Use% Mounted on
  devtmpfs             881M     0  881M   0% /dev
  tmpfs                909M     0  909M   0% /dev/shm
  tmpfs                909M  9.1M  900M   2% /run
  tmpfs                909M     0  909M   0% /sys/fs/cgroup
  /dev/mapper/cl-root   47G  5.5G   42G  12% /
  /dev/sda1           1014M  346M  669M  35% /boot
  /dev/sdb1             45M  1.1M   40M   3% /home/cs/myfiles
  Downloads            931G  321G  610G  35% /media/sf_Downloads
  tmpfs                182M   12K  182M   1% /run/user/42
  tmpfs                182M     0  182M   0% /run/user/0
  /dev/sdb2             45M  3.0M   42M   7% /mnt
[tuser1@thost1 Centos]#  mv -v /home/cs/mybackup /mnt
  created directory '/mnt/mybackup'
  removed directory '/home/cs/mybackup'
[tuser1@thost1 Centos]#  mv -v /home/cs/myfiles /mnt
  created directory '/mnt/myfiles'
  created directory '/mnt/myfiles/lost+found'
  copied '/home/cs/myfiles/group' -> '/mnt/myfiles/group'
  copied '/home/cs/myfiles/passwd' -> '/mnt/myfiles/passwd'
  removed '/home/cs/myfiles/passwd'
  removed directory '/home/cs/myfiles/lost+found'
  removed '/home/cs/myfiles/group'
  mv: cannot remove '/home/cs/myfiles': Device or resource busy
[tuser1@thost1 Centos]#  ls /mnt/
  mybackup  myfiles
[tuser1@thost1 Centos]#  umount /mnt
[tuser1@thost1 Centos]#  df -h
  Filesystem           Size  Used Avail Use% Mounted on
  devtmpfs             881M     0  881M   0% /dev
  tmpfs                909M     0  909M   0% /dev/shm
  tmpfs                909M  9.1M  900M   2% /run
  tmpfs                909M     0  909M   0% /sys/fs/cgroup
  /dev/mapper/cl-root   47G  5.5G   42G  12% /
  /dev/sda1           1014M  346M  669M  35% /boot
  /dev/sdb1             45M  1.1M   40M   3% /home/cs/myfiles
  Downloads            931G  321G  610G  35% /media/sf_Downloads
  tmpfs                182M   12K  182M   1% /run/user/42
  tmpfs                182M     0  182M   0% /run/user/0
Task:
Управление логическими томами - LVM
Создайте LVM, состоящий из двух разделов и одного целого диска.
Внутри группы томов создайте два логических раздела, каждый из которых должен занимать 30% пространства группы томов.
При включении файловая система на первом логическом разделе должна монтироваться в директорию /data, а файловая система второго логического раздела должна монтироваться в директорию /backup.
Decision:
[tuser1@thost1 Centos]#  df -h
  Filesystem           Size  Used Avail Use% Mounted on
  devtmpfs             881M     0  881M   0% /dev
  tmpfs                909M     0  909M   0% /dev/shm
  tmpfs                909M  9.3M  900M   2% /run
  tmpfs                909M     0  909M   0% /sys/fs/cgroup
  /dev/mapper/cl-root   47G  5.5G   42G  12% /
  /dev/sda1           1014M  346M  669M  35% /boot
  Downloads            931G  322G  610G  35% /media/sf_Downloads
  tmpfs                182M   32K  182M   1% /run/user/1000
  /dev/sr0              59M   59M     0 100% /run/media/cs/VBox_GAs_6.1.29
[tuser1@thost1 Centos]#  lsblk
  NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
  sda           8:0    0   50G  0 disk
  ├─sda1        8:1    0    1G  0 part /boot
  └─sda2        8:2    0   49G  0 part
├─cl-root 253:0    0   47G  0 lvm  /
└─cl-swap 253:1    0  2.1G  0 lvm  [SWAP]
  sdb           8:16   0    1G  0 disk
  sdc           8:32   0    1G  0 disk
  sr0          11:0    1 58.3M  0 rom  /run/media/cs/VBox_GAs_6.1.29
[tuser1@thost1 Centos]#  sudo fdisk /dev/sdb
  Welcome to fdisk (util-linux 2.32.1).
  Changes will remain in memory only, until you decide to write them.
  Be careful before using the write command.
  Device does not contain a recognized partition table.
  Created a new DOS disklabel with disk identifier 0x45b7ad47.
Command (m for help): g
  Created a new GPT disklabel (GUID: F214B3AC-4B25-C44A-9B25-391159BDF128).
Command (m for help): n
Partition number (1-128, default 1):
First sector (2048-2097118, default 2048):
Last sector, +sectors or +size{K,M,G,T,P} (2048-2097118, default 2097118): +200M
  Created a new partition 1 of type 'Linux filesystem' and of size 200 MiB.
Command (m for help): n
Partition number (2-128, default 2):
First sector (411648-2097118, default 411648):
Last sector, +sectors or +size{K,M,G,T,P} (411648-2097118, default 2097118): +400M
  Created a new partition 2 of type 'Linux filesystem' and of size 400 MiB.
Command (m for help): p
  Disk /dev/sdb: 1 GiB, 1073741824 bytes, 2097152 sectors
  Units: sectors of 1 * 512 = 512 bytes
  Sector size (logical/physical): 512 bytes / 512 bytes
  I/O size (minimum/optimal): 512 bytes / 512 bytes
  Disklabel type: gpt
  Disk identifier: F214B3AC-4B25-C44A-9B25-391159BDF128
  Device      Start     End Sectors  Size Type
  /dev/sdb1    2048  411647  409600  200M Linux filesystem
  /dev/sdb2  411648 1230847  819200  400M Linux filesystem
Command (m for help): w
  The partition table has been altered.
  Calling ioctl() to re-read partition table.
  Syncing disks.
[tuser1@thost1 Centos]#  sudo pvcreate /dev/sdb1
Physical volume "/dev/sdb1" successfully created.
[tuser1@thost1 Centos]#  sudo pvs
PV         VG Fmt  Attr PSize   PFree
/dev/sda2  cl lvm2 a--  <49.00g      0
/dev/sdb1     lvm2 ---  200.00m 200.00m
[tuser1@thost1 Centos]#  sudo pvdisplay /dev/sdb1
"/dev/sdb1" is a new physical volume of "200.00 MiB"
--- NEW Physical volume ---
PV Name               /dev/sdb1
VG Name
PV Size               200.00 MiB
Allocatable           NO
PE Size               0
Total PE              0
Free PE               0
Allocated PE          0
PV UUID               Zh9vy1-BMtC-NwkZ-uelY-PTFf-XEO8-nINDjc
[tuser1@thost1 Centos]#  sudo vgcreate myvg /dev/sdb1
Volume group "myvg" successfully created
[tuser1@thost1 Centos]#  sudo vgs
VG   #PV #LV #SN Attr   VSize   VFree
cl     1   2   0 wz--n- <49.00g      0
myvg   1   0   0 wz--n- 196.00m 196.00m
[tuser1@thost1 Centos]#  sudo vgdisplay myvg
--- Volume group ---
VG Name               myvg
System ID
Format                lvm2
Metadata Areas        1
Metadata Sequence No  1
VG Access             read/write
VG Status             resizable
MAX LV                0
Cur LV                0
Open LV               0
Max PV                0
Cur PV                1
Act PV                1
VG Size               196.00 MiB
PE Size               4.00 MiB
Total PE              49
Alloc PE / Size       0 / 0
Free  PE / Size       49 / 196.00 MiB
VG UUID               jAA7BR-mEHr-V2F8-yu8A-Bzoq-POr1-VSdD2q
[tuser1@thost1 Centos]#  sudo lvcreate myvg -n mylv -L 200M
Volume group "myvg" has insufficient free space (49 extents): 50 required.
[tuser1@thost1 Centos]#  sudo lvcreate myvg -n mylv -l 30%FREE
Logical volume "mylv" created.
[tuser1@thost1 Centos]#  sudo lvcreate myvg -n mylv2 -l 30%FREE
Logical volume "mylv2" created.
[tuser1@thost1 Centos]#  sudo lvs
LV    VG   Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
root  cl   -wi-ao---- <46.94g
swap  cl   -wi-ao----  <2.06g
mylv  myvg -wi-a-----  56.00m
mylv2 myvg -wi-a-----  40.00m
[tuser1@thost1 Centos]#  sudo lvdisplay myvg
--- Logical volume ---
LV Path                /dev/myvg/mylv
LV Name                mylv
VG Name                myvg
LV UUID                BXxmLe-zWBY-Syui-ifdb-uQ5h-7W8d-ER1fKc
LV Write Access        read/write
LV Creation host, time cs.virtualbox, 2022-02-12 10:27:18 +0800
LV Status              available
# open                 0
LV Size                56.00 MiB
Current LE             14
Segments               1
Allocation             inherit
Read ahead sectors     auto
- currently set to     8192
Block device           253:2
--- Logical volume ---
LV Path                /dev/myvg/mylv2
LV Name                mylv2
VG Name                myvg
LV UUID                UO5u2O-61IE-niam-EogM-8WDg-jP8y-vMyzjf
LV Write Access        read/write
LV Creation host, time cs.virtualbox, 2022-02-12 10:33:40 +0800
LV Status              available
# open                 0
LV Size                40.00 MiB
Current LE             10
Segments               1
Allocation             inherit
Read ahead sectors     auto
- currently set to     8192
Block device           253:3
[tuser1@thost1 Centos]#  ls /dev/myvg
  mylv  mylv2
[tuser1@thost1 Centos]#  sudo mkfs.ext4 /dev/myvg/mylv
  mke2fs 1.45.6 (20-Mar-2020)
  Creating filesystem with 57344 1k blocks and 14336 inodes
  Filesystem UUID: 4e2490cc-9a96-4cac-af6d-12f7835067ad
  Superblock backups stored on blocks:
      8193, 24577, 40961
  Allocating group tables: done
  Writing inode tables: done
  Creating journal (4096 blocks): done
  Writing superblocks and filesystem accounting information: done
[tuser1@thost1 Centos]#  sudo mkfs.ext4 /dev/myvg/mylv2
  mke2fs 1.45.6 (20-Mar-2020)
  Creating filesystem with 40960 1k blocks and 10240 inodes
  Filesystem UUID: 0c48275d-16e2-4054-a1c6-1d0da548eba3
  Superblock backups stored on blocks:
      8193, 24577
  Allocating group tables: done
  Writing inode tables: done
  Creating journal (4096 blocks): done
  Writing superblocks and filesystem accounting information: done
[tuser1@thost1 Centos]#  ll /dev/myvg/
  total 0
  lrwxrwxrwx. 1 root root 7 Feb 12 10:37 mylv -> ../dm-2
  lrwxrwxrwx. 1 root root 7 Feb 12 10:37 mylv2 -> ../dm-3
[tuser1@thost1 Centos]#  ll /dev/dm-*
  brw-rw----. 1 root disk 253, 0 Feb 10 09:25 /dev/dm-0
  brw-rw----. 1 root disk 253, 1 Feb 10 09:25 /dev/dm-1
  brw-rw----. 1 root disk 253, 2 Feb 12 10:37 /dev/dm-2
  brw-rw----. 1 root disk 253, 3 Feb 12 10:37 /dev/dm-3
[tuser1@thost1 Centos]#  sudo lsblk -f /dev/myvg/mylv
  NAME      FSTYPE LABEL UUID                                 MOUNTPOINT
  myvg-mylv ext4         4e2490cc-9a96-4cac-af6d-12f7835067ad
[tuser1@thost1 Centos]#  sudo lsblk -f /dev/myvg/mylv2
  NAME       FSTYPE LABEL UUID                                 MOUNTPOINT
  myvg-mylv2 ext4         0c48275d-16e2-4054-a1c6-1d0da548eba3
[tuser1@thost1 Centos]#  cat /etc/fstab
#
# /etc/fstab
# Created by anaconda on Fri Jan 14 04:46:51 2022
#
# Accessible filesystems, by reference, are maintained under '/dev/disk/'.
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info.
#
# After editing this file, run 'systemctl daemon-reload' to update systemd
# units generated from this file.
#
/dev/mapper/cl-root     /                       xfs     defaults        0 0
UUID=8ec77867-4190-4bad-b7a5-98c12e4f3a5e /boot                   xfs     defaults        0 0
/dev/mapper/cl-swap     none                    swap    defaults        0 0
[tuser1@thost1 Centos]#  ll /dev/mapper
  total 0
  lrwxrwxrwx. 1 root root       7 Feb 10 09:25 cl-root -> ../dm-0
  lrwxrwxrwx. 1 root root       7 Feb 10 09:25 cl-swap -> ../dm-1
  crw-------. 1 root root 10, 236 Feb 10 09:25 control
  lrwxrwxrwx. 1 root root       7 Feb 12 10:37 myvg-mylv -> ../dm-2
  lrwxrwxrwx. 1 root root       7 Feb 12 10:37 myvg-mylv2 -> ../dm-3
[tuser1@thost1 Centos]#  sudo vim /etc/fstab
[tuser1@thost1 Centos]#  cat /etc/fstab
#
# /etc/fstab
# Created by anaconda on Fri Jan 14 04:46:51 2022
#
# Accessible filesystems, by reference, are maintained under '/dev/disk/'.
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info.
#
# After editing this file, run 'systemctl daemon-reload' to update systemd
# units generated from this file.
#
/dev/mapper/cl-root     /                       xfs     defaults        0 0
UUID=8ec77867-4190-4bad-b7a5-98c12e4f3a5e /boot                   xfs     defaults        0 0
/dev/mapper/cl-swap     none                    swap    defaults        0 0
/dev/mapper/myvg-mylv   /data                   ext4    noatime         0 0
/dev/mapper/myvg-mylv2  /backup                 ext4    noatime         0 0
[tuser1@thost1 Centos]#  sudo mkdir /data
  mkdir: cannot create directory ‘/data’: File exists
[tuser1@thost1 Centos]#  sudo mkdir /backup
[tuser1@thost1 Centos]#  sudo mount /data
[tuser1@thost1 Centos]#  sudo mount /backup
[tuser1@thost1 Centos]#  df -h /data
  Filesystem             Size  Used Avail Use% Mounted on
  /dev/mapper/myvg-mylv   51M  1.1M   46M   3% /data
[tuser1@thost1 Centos]#  df -h /backup
  Filesystem              Size  Used Avail Use% Mounted on
  /dev/mapper/myvg-mylv2   35M  782K   32M   3% /backup
Source:
https://codernotes.ru/articles/administrirovanie-linux/chem-zanyato-mesto-na-diske-linux.html
https://losst.ru/komanda-du-v-linux
https://www.youtube.com/watch?v=qXq7qH_MdV8&list=PLtSGboPf3g50Aejrp6KjQsqqjxvAO4aKw&index=4
https://basis.gnulinux.pro/ru/latest/basis/25/25._%D0%9F%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B0.html#"
Task:
Создайте сжатый архив файлов, измененных за последнюю неделю (tar, gzip, find, cpio)
Decision:
$ find / -type f -mtime -7 > files.txt 2>/dev/null
$ tar -cf arch.tar -T files.txt 2>/dev/null
$ gzip arch.tar
$ gzip -l arch.tar.gz
compressed uncompressed ratio uncompressed_name
60560158 163093504 62.9% arch.tar
Task:
Переведите часы на зимнее время (на 1 час назад)
Decision:
$ date
Fri Nov 30 15:58:48 2007
$ date --s -1hour
Fri Nov 30 14:58:54 2007
Task:
Исключить обновление определенного пакета
Decision:
# dnf update
  Последняя проверка окончания срока действия метаданных: 0:33:32 назад, Пн 21 фев 2022 12:18:38.
  Зависимости разрешены.
  ================================================================================
   Пакет                Архитектура    Версия          Репозиторий          Размер
  ================================================================================
  Обновление:
   sublime-text         x86_64         4126-1          sublime-text          20 M
  Результат транзакции
  ================================================================================
  Обновление  1 Пакет
  Объем загрузки: 20 M
  Продолжить? [д/Н]: n
  Операция отменена.
# cat /etc/dnf/dnf.conf
[main]
gpgcheck=1
installonly_limit=3
clean_requirements_on_remove=True
best=True
skip_if_unavailable=False
# vim /etc/dnf/dnf.conf
# cat /etc/dnf/dnf.conf
[main]
gpgcheck=1
installonly_limit=3
clean_requirements_on_remove=True
best=True
skip_if_unavailable=False
## Exclude following Packages Updates ##
exclude=sublime-text
# dnf update
  Последняя проверка окончания срока действия метаданных: 0:33:57 назад, Пн 21 фев 2022 12:18:38.
  Зависимости разрешены.
  Отсутствуют действия для выполнения.
  Выполнено!
Task:
Adding the Ubuntu using wsl
Decision:
C:\Users\dd>powershell "start-process powershell -verb runas"
PS C:\Windows\system32> wsl --list --online
PS C:\Windows\system32> wsl --install -d Ubuntu-20.04
PS C:\Windows\system32> Restart-Computer
Task:
чтобы увеличить звук проигрывателя
Decision:
- пуск -> K-lite codec -> Media Player Classi-c -> вид -> настройки -> встроенные фильтры -> аудиопереключатель можно поставить галочку на нормализацию -> убрать галочку на восстанавливать громкость -> настроить усиление по больше.
Task:
восстановление системы даже под обычной загрузки
Decision: 
- пробуем в командной строке открыть доступ к папке с файлами, которые следует заменить С:\windows\System32\config.С флешки эту папку нужно открыть и внутри удалить/вырезать 5 файлов DEFAUT,SAM, SECURITY,SOFTWARE,SYSTEM,и с regpack переношу эти же файлы в конфиг и перезагружаюсь
Task:
Установить Sublimetext
Decision:
$ sudo rpm -v --import https://download.sublimetext.com/sublimehq-rpm-pub.gpg
$ sudo dnf config-manager --add-repo https://download.sublimetext.com/rpm/stable/x86_64/sublime-text.repo
$ sudo dnf -y install sublime-text
Source:
https://www.sublimetext.com/docs/linux_repositories.html#dnf
Task:
Установить Visualstudio в Linux
Decision:
$ sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
$ sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
$ dnf check-update
$ sudo dnf install code -y
$ code
Source:
https://code.visualstudio.com/docs/setup/linux
Task:
Vim.
Заменить все вхождения “old” на “new”
Decision:
:%s/OldWords/NewWords/g
Task:
Составьте crontab файл для следующих процессов: 
1. daily1.sh - ежедневно в 23:55. 
2. daily2.sh - ежедневно в 8:00 и 17:00 
3. hourly.sh - каждый час в рабочее время (пн-пт, 8:00-17:30) 
4. happy_new_year.sh - в момент наступления нового года 
5. quatre.sh - каждые 4 часа
Decision:
$ crontab -l
...
55 23 * * * /tdir/daily1.sh > /tdir/addtestfile
0 8-17 * * * /tdir/daily2.sh > /tdir/addtestfile
0 8-17 * * 1-5 /tdir/hourly.sh > /tdir/addtestfile
0 0 1 1 * /tdir/happy_new_year.sh > /tdir/addtestfile
* */4 * * * /tdir/quatre.sh > /tdir/addtestfile
Task:
допустим у нас есть файл testcron.sh.
$ cat testcron.sh
#!/bin/bash
echo "It is now $(date +%T) on (date +%A)"
$chmod +x testcron.sh
если его выполнить
$ ./testcron.sh
It is now 08:04:32 on (date +%A)
Выполнить тестовый скрипт каждую минуту
Decision:
$ crontab -e
No modification made
$ crontab -e
* * * * * /home/administrator/testcron.sh
Task:
Выполнить тестовый скрипт каждую минуту и добавим вывод в лог.
Decision:
$ crontab -e
* * * * * /home/administrator/testcron.sh >> /home/administrator/test.log
$ ls
examples.desktop Видео Изображения 'Рабочий стол'
testcron.sh Документы Музыка Шаблоны
test.log Загрузки Общедоступные
$ cat test.log
$ cat test.log
It is now 08:05:01 on (date +%A)
$ crontab -l
# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h dom mon dow command
* * * * * /home/linux/testcron.sh >> /home/linux/test.log
$ sudo crontab -l
no crontab for root
Task:
Отредактируем таблицу cron root. Мы перезагрузим сервер в 4:15, вывод в null. /dev/null - вывода не будет, чтобы не спамило журнал системы.
Decision:
$ sudo crontab -e
15 4 * * * /sbin/reboot > /dev/null 2>&1 #
0 */2 * * * /etc/init.d/nginx restart >> /dev/null 2>&1 #Перезапустить nginx каждый чётный час - */2
$ sudo crontab -l
# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h dom mon dow command
15 4 * * * /sbin/reboot > /dev/null 2>&1
0 */2 * * * /etc/init.d/nginx restart >> /dev/null 2>&1
$ cat test.log
It is now 08:05:01 on (date +%A)
It is now 08:06:01 on (date +%A)
$ date
Сб мар 7 08:06:01 MSK 2020
$ journalctl -e
 мар 07 08:03:19 VirtualBox rtkit-daemon[1069]: Supervising 4 threads of 2 proces
 мар 07 08:03:19 VirtualBox rtkit-daemon[1069]: Supervising 4 threads of 2 proces
 мар 07 08:03:24 VirtualBox rtkit-daemon[1069]: Supervising 4 threads of 2 proces
 мар 07 08:03:24 VirtualBox rtkit-daemon[1069]: Supervising 4 threads of 2 proces
 мар 07 08:03:30 VirtualBox rtkit-daemon[1069]: Supervising 4 threads of 2 proces
 мар 07 08:03:30 VirtualBox rtkit-daemon[1069]: Supervising 4 threads of 2 proces
 мар 07 08:03:30 VirtualBox rtkit-daemon[1069]: Supervising 4 threads of 2 proces
 мар 07 08:03:30 VirtualBox rtkit-daemon[1069]: Supervising 4 threads of 2 proces
 мар 07 08:03:30 VirtualBox rtkit-daemon[1069]: Successfully made thread 2635 of
 мар 07 08:03:30 VirtualBox rtkit-daemon[1069]: Supervising 5 threads of 3 proces
 мар 07 08:03:35 VirtualBox rtkit-daemon[1069]: Supervising 5 threads of 3 proces
 мар 07 08:03:35 VirtualBox rtkit-daemon[1069]: Supervising 5 threads of 3 proces
 мар 07 08:04:01 VirtualBox CRON[2678]: pam_unix(cron:session): session opened fo
 мар 07 08:04:01 VirtualBox CRON[2679]: (linux) CMD (/home/linux/testcron.sh >> /
 мар 07 08:04:01 VirtualBox CRON[2678]: (CRON) info (No MTA installed, discarding
 мар 07 08:04:01 VirtualBox CRON[2678]: pam_unix(cron:session): session closed fo
 мар 07 08:05:01 VirtualBox CRON[2699]: pam_unix(cron:session): session opened fo
 мар 07 08:05:01 VirtualBox CRON[2700]: (linux) CMD (/home/linux/testcron.sh >> /
 мар 07 08:05:01 VirtualBox CRON[2699]: pam_unix(cron:session): session closed fo
 мар 07 08:05:09 VirtualBox gnome-shell[1033]: JS WARNING: [resource:///org/gnome
 мар 07 08:06:01 VirtualBox CRON[2719]: pam_unix(cron:session): session opened fo
 мар 07 08:06:01 VirtualBox CRON[2720]: (linux) CMD (/home/linux/testcron.sh >> /
 мар 07 08:06:01 VirtualBox CRON[2719]: pam_unix(cron:session): session closed fo
$ cat /etc/crontab
# /etc/crontab: system-wide crontab
# Unlike any other crontab you don't have to run the `crontab'
# command to install the new version when you edit this file
# and files in /etc/cron.d. These files also have username fields,
# that none of the other crontabs do.
SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
# m h dom mon dow user command
17 * * * * root cd / && run-parts --report /etc/cron.hourly
25 6 * * * root test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily )
47 6 * * 7 root test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.weekly )
52 6 1 * * root test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.monthly )
Task:
Редактировать таблицу cron пользователя linux
Decision:
$ sudo crontab -u linux -e
Task:
Создайте скрипт, который создаёт файл. Настройте запуск этого скрипта раз в минуту. Проверьте результат.
Decision:
$ vim BASH-CronScript1.sh
$ cat BASH-CronScript1.sh
#!/bin/bash
touch testfile
$ ./BASH-CronScript1.sh
$ sudo cp BASH-CronScript1.sh /usr/bin/
$ BASH-CronScript1.sh
$ ls -l testfile
-rw-rw-r--. 1 ur ur 0 мая  4 09:48 testfile
$ cat /etc/crontab
SHELL=/bin/bash
PATH=/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=root
# For details see man 4 crontabs
# Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * ur-name  command to be executed
$ crontab -e
no crontab for ur - using an empty one
crontab: installing new crontab
$ crontab -l
*  *  *  *  *  /usr/bin/BASH-CronScript1.sh
$ ls -l testfile
-rw-rw-r--. 1 ur ur 0 мая  4 09:58 testfile
$ ls -l testfile
-rw-rw-r--. 1 ur ur 0 мая  4 09:59 testfile
Task:
Настройте в at задачу, чтобы она создала файл через 3 минуты.
Decision:
$ at now + 3 minutes
warning: commands will be executed using /bin/sh
at> /usr/bin/BASH-CronScript1.sh
at> <EOT>
job 3 at Wed May  4 10:34:00 2022
$ ls -l testfile
-rw-rw-r--. 1 ur ur 0 мая  4 10:34 testfile
Task:
Настройте cron, чтобы он создавал директорию при каждой перезагрузке.
Decision:
$ crontab -e
crontab: installing new crontab
$ ls
$ crontab -l
#*  *  *  *  *  /usr/bin/BASH-CronScript1.sh
@reboot mkdir testdir
$ ls -l
...
drwxr-xr-x. 2 ur ur    4096 мая  4 10:37  testdir
...
Task:
Создайте пользователя backup и настройте для него cron, чтобы тот раз в день находил файлы старее 5 дней в директории /data и добавлял эти файлы в архив /backup/archive.tar, после чего удалял из исходной директории. Настройте cron у пользователя ur, чтобы он каждые 10 минут создавал файл в директории /data.
Также у пользователя root создайте cron, чтобы он каждую пятницу в 23:30 записывал содержимое директории /data и содержимое архива /backup/archive.tar в файл /var/log/reports/текущаядата.
Decision:
$ sudo useradd backup2
$ sudo passwd backup2
$ sudo mkdir /backup/
$ ls -l /data
итого 0
-rw-r--r--. 1 root root 0 апр 14 13:14 testfile1
-rw-r--r--. 1 root root 0 апр 14 13:14 testfile2
-rw-r--r--. 1 root root 0 апр 14 13:14 testfile3
-rw-r--r--. 1 root root 0 апр 14 13:14 testfile4
-rw-r--r--. 1 root root 0 апр 14 13:14 testfile5
$ su - backup2
$ ls -l /data/
итого 0
-rw-r--r--. 1 root root 0 апр 14 13:14 testfile1
-rw-r--r--. 1 root root 0 апр 14 13:14 testfile2
-rw-r--r--. 1 root root 0 апр 14 13:14 testfile3
-rw-r--r--. 1 root root 0 апр 14 13:14 testfile4
-rw-r--r--. 1 root root 0 апр 14 13:14 testfile5
$ vim Linux-Gnulinux-TaskScheduler1.sh
$ cat Linux-Gnulinux-TaskScheduler1.sh
#!/bin/bash
# Создайте пользователя backup и настройте для него cron, чтобы тот раз в день находил файлы старее 5 дней в директории /data и добавлял эти файлы в архив /backup/archive.tar, после чего удалял из исходной директории.
if find /data/ -type f -mtime +5; then
cd /data
tar -cvf /backup/archive.tar testfile*
rm -rf /data/testfile*
else
echo "No files"
fi
$ sudo rm -rf /backup/archive.tar
$ sudo ./Linux-Gnulinux-TaskScheduler1.sh
/data/testfile5
/data/testfile1
/data/testfile3
/data/testfile2
/data/testfile4
testfile1
testfile2
testfile3
testfile4
testfile5
$ ls -l /data/
итого 0
$ ls -l /backup/
итого 12
-rw-r--r--. 1 root root 10240 мая 11 11:19 archive.tar
$ sudo tar -tf /backup/archive.tar
testfile1
testfile2
testfile3
testfile4
testfile5
$ crontab -e
no crontab for backup2 - using an empty one
crontab: installing new crontab
$ crontab -l
5 11 * * * tar --totals -cvf /backup/archive.tar /data/testfile{1..2} | rm -rf /data/testfile{1..2}
$ sudo mv Linux-Gnulinux-TaskScheduler1.sh /usr/bin/
$ exit
$ sudo vim /var/spool/cron/backup2
$ sudo cat /var/spool/cron/backup2
@daily /usr/bin/Linux-Gnulinux-TaskScheduler1.sh
$ vim Linux-Gnulinux-TaskScheduler2.sh
$ cat Linux-Gnulinux-TaskScheduler2.sh
#!/bin/bash
touch /data/testfile0
$ sudo chown user:user /data
$ ls -l /
...
drwxr-xr-x.   2 user user  4096 мая 11 11:19 data
...
$ sudo mv Linux-Gnulinux-TaskScheduler2.sh /usr/bin
$ whoami
user
$ crontab -e
crontab: installing new crontab
$ crontab -l
#*  *  *  *  *  /usr/bin/BASH-CronScript1.sh
@reboot mkdir testdir
*/10  *  *  *  *  /usr/bin/Linux-Gnulinux-TaskScheduler2.sh
$ ls -l /data/
итого 0
-rw-r--r--. 1 user user 0 мая 12 08:57 testfile0
$ sudo vim /usr/bin/Linux-Gnulinux-TaskScheduler3.sh
$ sudo cat /usr/bin/Linux-Gnulinux-TaskScheduler3.sh
#!/bin/bash
# Также у пользователя root создайте cron, чтобы он каждую пятницу в 23:30 записывал содержимое директории /data и содержимое архива /backup/archive.tar в файл /var/log/reports/текущаядата.
mkdir /var/log/reports
ls -l /data > /var/log/reports/$(date +"%d.%m.%Y")
tar -tf /backup/archive.tar >> /var/log/reports/$(date +"%d.%m.%Y")
$ sudo vim /var/spool/cron/root
$ sudo cat /var/spool/cron/root
30  23  *  *  5  /usr/bin/Linux-Gnulinux-TaskScheduler3.sh
Source:
https://basis.gnulinux.pro/ru/latest/
Task:
Настроить диск с файловой системой exfat.
Decision:
$ sudo apt install exfat-fuse
$ sudo mkfs -t exfat /dev/sdc1
Task:
Создать директорию или файл с пробелом в названии
Decision:
$ mkdir /mnt/Program\ Files
Task:
Скопировать файлы с теми же правами
Decision:
$ sudo cp -pr /var/lib/postgresql/14.backup /var/lib/postgresql/14/
Source:
копирование файлов с правами и пользователями - https://www.linux.org.ru/forum/general/8186570
Task:
Общие папки Linux
Decision:
$ sudo mkdir /var/share
$ sudo chmod ugo+rw -R /var/share
Source:
Общие папки в Linux - https://losst.pro/obshhie-papki-linux
Task:
Создать ссылку на директорию tdir1.
Decision:
$ mkdir tdir1
$ mkdir tdir2
$ touch tdir1/tfile1
$ ln -s /home/tuser/tdir1 /home/tuser/tdir2
Task:
Установить vscode.
Decision:
$ wget https://vscode.download.prss.microsoft.com/dbazure/download/stable/903b1e9d8990623e3d7da1df3d33db3e42d80eda/code_1.86.2-1707854558_amd64.deb
$ sudo apt install ./code_1.86.2-1707854558_amd64.deb
Source:
Debian and Ubuntu based distributions - https://code.visualstudio.com/docs/setup/linux
Task:
Запускаем любой процесс, например, с помощью watch отслеживаем статистику программы free в реальном времени. С другой консоли посмотрим приоритет процесса watch.
Decision:
watch free
ps -C watch -o ni=
15
Task:
Есть консольная программа для Linux, которая должна вывести результат работы в терминал. Но после запуска никакого вывода не происходит и вы снова видите системное приглашение консоли. Перечислите порядок действий дя выявления причин и инструменты, которыми воспользуетесь для решения данной проблемы.
Decision:
Если код закрыт, то надо перенаправить весь вывод на стандартный:
filename &2>&1
это перенаправляет поток ошибок stderr на стандартный вывод stdout.
А если открыт, то уже смотреть по самому коду скрипта или исполняемого файла.
Проверить штатность поведения - код возврата:
./app; echo $?
если не 0, то посмотрел бы в dmesg на предмет segfault. Может оно просто тихо падает. Потом попробовал бы почитать man, запустил бы с ключом --help или -h. Исключив segfault, запустил бы её через strace, чтобы посмотреть, что она вообще пытается сделать.
Source:
Принцип работы - https://www.dmosk.ru/miniinstruktions.php?mini=selinux-setting&ysclid=lw1jsobk8866859354
Принудительный контроль доступа - SElinux - https://basis.gnulinux.pro/ru/latest/basis/45/45._%D0%9F%D1%80%D0%B8%D0%BD%D1%83%D0%B4%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D1%8B%D0%B9_%D0%BA%D0%BE%D0%BD%D1%82%D1%80%D0%BE%D0%BB%D1%8C_%D0%B4%D0%BE%D1%81%D1%82%D1%83%D0%BF%D0%B0_-_SElinux.html
  Task:
  Как узнать дистрибутив?
  Decision:
  $ cat /etc/*-release
  DISTRIB_ID=Ubuntu
  DISTRIB_RELEASE=20.04
  DISTRIB_CODENAME=focal
  DISTRIB_DESCRIPTION="Ubuntu 20.04.5 LTS"
  NAME="Ubuntu"
  VERSION="20.04.5 LTS (Focal Fossa)"
  ID=ubuntu
  ID_LIKE=debian
  PRETTY_NAME="Ubuntu 20.04.5 LTS"
  VERSION_ID="20.04"
  HOME_URL="https://www.ubuntu.com/"
  SUPPORT_URL="https://help.ubuntu.com/"
  BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
  PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
  VERSION_CODENAME=focal
  UBUNTU_CODENAME=focal
  Source:
  https://losst.ru/kak-uznat-versiyu-linux?ysclid=l7mrzpkpk917754519#%D0%A3%D0%B7%D0%BD%D0%B0%D1%82%D1%8C_%D0%B4%D0%B8%D1%81%D1%82%D1%80%D0%B8%D0%B1%D1%83%D1%82%D0%B8%D0%B2
  Task:
  В CentOS/Redhat/fedora нужно перечитать конфиг файл постгресса.
  Decision:
  # systemctl reload postgresql.servise
  Task:
файл hosts
Decision:
Разрешает доступ к ресурсам, Задает приоритет перед DNS, Позволяет попасть на сайт
Task:
Файл с расширением ADMX
Decision:
XML-файл на основе параметров групповой политики Windows / Office
Task:
принцип работы групп безопасности
Decision:
Запрещено всё, что не разрешено напрямую
Task:
признаки отказоустойчивой архитектуры
Decision:
использование компонентов одного вендора, которые хорошо интегрируются между собой
Task:
типы записей DNS
Decision:
A, AAAA, CNAME, MX, PTR, TXT, SRV, NS, SOA
Task:
Коды сообщений или ошибок http
Decision:
1xx: Informational (информационные):
100 Continue (продолжайте)
101 Switching Protocols (переключение протоколов)
102 Processing (идёт обработка)
103 Early Hints (ранняя метаинформация)
2xx: Success (успешно):
200 OK (хорошо)
201 Created (создано)
202 Accepted (принято)
203 Non-Authoritative Information (информация не авторитетна)
204 No Content (нет содержимого)
205 Reset Content (сбросить содержимое)
206 Partial Content (частичное содержимое)
207 Multi-Status (многостатусный)
208 Already Reported (уже сообщалось)
226 IM Used (использовано IM)
3xx: Redirection (перенаправление):
300 Multiple Choices (множество выборов)
301 Moved Permanently (перемещено навсегда)
302 Found (найдено)
303 See Other (смотреть другое)
304 Not Modified (не изменялось)
305 Use Proxy (использовать прокси)
306 — зарезервировано (код использовался только в ранних спецификациях)
307 Temporary Redirect (временное перенаправление)
308 Permanent Redirect (постоянное перенаправление)
4xx: Client Error (ошибка клиента):
400 Bad Request (неправильный, некорректный запрос)
401 Unauthorized (не авторизован)
402 Payment Required (необходима оплата) — зарезервировано для использования в будущем
403 Forbidden (запрещено (не уполномочен))
404 Not Found (не найдено)
405 Method Not Allowed (метод не поддерживается)
406 Not Acceptable (неприемлемо)
407 Proxy Authentication Required (необходима аутентификация прокси)
408 Request Timeout (истекло время ожидания)
409 Conflict (конфликт)
410 Gone (удалён)
411 Length Required (необходима длина)
412 Precondition Failed (условие ложно)
413 Payload Too Large (полезная нагрузка слишком велика)
414 URI Too Long (URI слишком длинный)
415 Unsupported Media Type (неподдерживаемый тип данных)
416 Range Not Satisfiable (диапазон не достижим)
417 Expectation Failed (ожидание не удалось)
418 I’m a teapot (я — чайник)
419 Authentication Timeout (not in RFC 2616) (обычно ошибка проверки CSRF)
421 Misdirected Request
422 Unprocessable Entity (необрабатываемый экземпляр)
423 Locked (заблокировано)
424 Failed Dependency (невыполненная зависимость)
425 Too Early (слишком рано)
426 Upgrade Required (необходимо обновление)
428 Precondition Required (необходимо предусловие)
429 Too Many Requests (слишком много запросов)
431 Request Header Fields Too Large (поля заголовка запроса слишком большие)
449 Retry With (повторить с)
451 Unavailable For Legal Reasons (недоступно по юридическим причинам)
499 Client Closed Request (клиент закрыл соединение)
5xx: Server Error (ошибка сервера):
500 Internal Server Error (внутренняя ошибка сервера)
501 Not Implemented (не реализовано)
502 Bad Gateway (плохой, ошибочный шлюз)
503 Service Unavailable (сервис недоступен)
504 Gateway Timeout (шлюз не отвечает)
505 HTTP Version Not Supported (версия HTTP не поддерживается)
506 Variant Also Negotiates (вариант тоже проводит согласование)
507 Insufficient Storage (переполнение хранилища)
508 Loop Detected (обнаружено бесконечное перенаправление)
509 Bandwidth Limit Exceeded (исчерпана пропускная ширина канала)
510 Not Extended (не расширено)
511 Network Authentication Required (требуется сетевая аутентификация)
520 Unknown Error (неизвестная ошибка)
521 Web Server Is Down (веб-сервер не работает)
522 Connection Timed Out (соединение не отвечает)
523 Origin Is Unreachable (источник недоступен)
524 A Timeout Occurred (время ожидания истекло)
525 SSL Handshake Failed (квитирование SSL не удалось)
526 Invalid SSL Certificate (недействительный сертификат SSL)
Task:
Чем Nginx отличается от Apache?
Decision:
асинхронный принцип работы Nginx
Task:
преимущества подхода Infrastructure as Code?
Decision:
-изменения, вносимые в спецификации, легко проконтролировать
-для спецификаций можно хранить историю версий и при необходимости можно быстро извлечь и использовать нужную версию
-описания отдельных объектов IT-инфраструктуры можно многократно использовать в разных инсталляциях, это ускоряет подготовку к развёртыванию и повышает надёжность за счет использования проверенных решений
Task:
Принцип работы SElinux
Decision:
SELinux расширяет возможности стандартной системы безопасности (на основе прав доступа к файлам). Она позволяет ограничить доступ процессу, который запускается от имени пользователя, у которого прав больше, чем нужно данному процессу. Чтобы понять наглядно принцип работы SELinux, рассмотрим контекст безопасности — сочетание сущности, роли, домена и категории (не обязательно).
Task:
Чем приватный отличается от публичного ключа?
Decision:
Мы можем сгенерировать два ключа - приватный и публичный. После чего закинуть публичный ключ на все свои сервера и подключаться к ним без пароля, используя приватный ключ. Это говорит о том, что приватный ключ нужно беречь,
Админ закидывает публичный ключ на сервера, в домашнюю директорию пользователей, к которым будет подключаться. И при следующем подключении демон ssh увидит наличие подходящего ключа у пользователя и аутентифицирует его.
Task:
Как сгенерировать ssh ключа?
Decision:
Для начала нужно сгенерировать ключи, это делается на стороне клиента, т.е. у администратора. Для генерации ключей используется команда ssh-keygen. По умолчанию ключи и в целом настройки клиента ssh хранятся в домашней директории пользователя, в скрытой директории .ssh. А ключи, по умолчанию, называются id_rsa. По хорошему, когда у нас много серверов, мы можем создать различные ключи и для подключения к разным серверам использовать разные ключи. Тут нажмём enter, чтобы использовать название по умолчанию. Дальше у нас спрашивается пароль для ключа. Так как ssh ключи позволяют заходить на сервера без пароля, они могут быть очень опасны, если попадут в руки злоумышленникам. Поэтому мы можем защитить приватные ключи паролем. При использовании ключа нам нужно будет вводить пароль от ключа, но, если у нас украдут этот ключ, без пароля хакеры ничего не сделают. Для нашего примера мы не будем использовать пароль, чтобы было нагляднее. Поэтому нажимаем два раза Enter и ключ создаётся. Мы видим, что создались два файла - id_rsa и id_rsa.pub - приватный и публичный ключ соответственно. Также внизу есть эдакая картинка, визуализирующая ключ. На самом деле это больше нужно для ключей хоста - вы можете настроить так, чтобы при подключении к серверам вы видели ключ хоста в таком виде. Если вдруг ключ хоста изменится или кто-то встанет посреди трафика, ключ будет другой и визуально вы сразу заметите разницу.
У нас есть ключи, теперь мы можем закинуть наш публичный ключ на какой-нибудь сервер и проверить. Используем эту же виртуалку и пользователя root. Самый простой способ закинуть ключ - команда ssh-copy-id.
Если не использовать никакие опции, она найдёт дефолтный ключ id_rsa.pub и закинет его. При этом, чтобы закинуть ключ, ssh подключается на этот сервер к пользователю, поэтому он попросит пароль пользователя. После чего добавит ключ и предложит нам проверить.
На этот раз никакого пароля не потребовалось, мы можем аутентифицироваться по ключу.
Посмотрим появившиеся файлы, для начала у клиента. В директории .ssh у нас 3 файла - два ключа и файл known_hosts.
Ключи представляют из себя текстовые файлы с непонятным набором символов. А в файле known_hosts указаны адреса, к которым мы подключались, а также отпечатки их ключей. Именно по этому файлу наш клиент будет понимать, изменились ли у сервера ключи или нет.
На сервере, в домашней директории пользователя, к которому я закинул ключ, также появилась директория .ssh с файлом authorized_keys
В этот файл будут попадать публичные ключи пользователей, т.е. это результат команды ssh-copy-id. На самом деле, хоть и не понятно в терминале, в этом файле сейчас одна строчка с одним ключом. Этот тот же id_rsa.pub. Если кто-то ещё добавит ключ, то он будет на второй строчке, т.е. один ключ - одна строчка.
Task:
Пример Rpo/Rto 
Decision:
Раз в день в 1:00 делаете бэкап. в 12:00 сгорает сервер. Поставил новый компьютер, установил ОС, программы и восстанавили бэкап. в 17:00 - полное восстановление. 
Время от последнего бэкапа - Rpo, а время до восстановления - rto. Если организация хочет Rpo 1 час - бэкап надо делать каждый час, а для 1 часа нужно автоматическое создание серверов. Можно сделать реплику потерю данных Rpo на другой сервер. 
Task:
Какие характеристики микросервисов ты знаешь?
Decision:
- Все разбито на маленькие компоненты. Например, есть компонент для веб-сервера, есть компонент, который показывает другу страницу и есть компонент, который обращается к базе данных.
- Если что-то ломается, это не страшно, когда есть другие микросервисы.
- Все данные должны сохраняться в какой-нибудь БД, а не в микросервисах.
Task:
Пример работы DNS
Decision:
Ввожу адрес. компьютер понимает только Ip адреса. Поэтому ему надо перевести ваш Url запрос в Ip. Компьютер сначала локально проверят хост файл. в линуксе это reslove. Если в файле прописан жанный адрес, то ответ отправляется пользователю, если нет то проверяется в Dns Серверах на регистрацию адреса. ВОзращается все это по протоколку http. 
Task:
Чем Active Directory отличается от Dns?
Decision:
Active Directory использует DNS как механизм поиска контроллеров домена и других объектов
Task:
Пример работы инкапсуляции Модель OSI 
Decision:
- Представим ситуацию, что вы сидите у себя дома за компьютером, а в соседней комнате у вас свой локальный веб-сервер. И вот вам понадобилось скачать файл с него. Вы набираете адрес страницы вашего сайта. Сейчас вы используете протокол HTTP, которые работает на прикладном уровне. Данные упаковываются и спускаются на уровень ниже.
- Полученные данные прибегают на уровень представления. Здесь эти данные структурируются и приводятся в формат, который сможет быть прочитан на сервере. Запаковывается и спускается ниже.
- На этом уровне создается сессия между компьютером и сервером.
- Так как это веб сервер и требуется надежное установление соединения и контроль за принятыми данными, используется протокол TCP. Здесь мы указываем порт, на который будем стучаться и порт источника, чтобы сервер знал, куда отправлять ответ. Это нужно для того, чтобы сервер понял, что мы хотим попасть на веб-сервер (стандартно — это 80 порт), а не на почтовый сервер. Упаковываем и спускаем дальше.
- Здесь мы должны указать, на какой адрес отправлять пакет. Соответственно, указываем адрес назначения (пусть адрес сервера будет 192.168.1.2) и адрес источника (адрес компьютера 192.168.1.1). Заворачиваем и спускаем дальше.
- IP пакет спускается вниз и тут вступает в работу канальный уровень. Он добавляет физические адреса источника и назначения, о которых подробно будет расписано в последующей статье. Так как у нас компьютер и сервер в локальной среде, то адресом источника будет являться MAC-адрес компьютера, а адресом назначения MAC-адрес сервера (если бы компьютер и сервер находились в разных сетях, то адресация работала по-другому). Если на верхних уровнях каждый раз добавлялся заголовок, то здесь еще добавляется концевик, который указывает на конец кадра и готовность всех собранных данных к отправке.
- И уже физический уровень конвертирует полученное в биты и при помощи электрических сигналов (если это витая пара), отправляет на сервер.
Task:
Пример работы деинкапусуляции Модель OSI 
Decision:
- На физическом уровне принимаются электрические сигналы и конвертируются в понятную битовую последовательность для канального уровня.
- На канальном уровне проверяется MAC-адрес назначения (ему ли это адресовано). Если да, то проверяется кадр на целостность и отсутствие ошибок, если все прекрасно и данные целы, он передает их вышестоящему уровню.
- На сетевом уровне проверяется IP адрес назначения. И если он верен, данные поднимаются выше. Не стоит сейчас вдаваться в подробности, почему у нас адресация на канальном и сетевом уровне. Это тема требует особого внимания, и я подробно объясню их различие позже. Главное сейчас понять, как данные упаковываются и распаковываются.
- На транспортном уровне проверяется порт назначения (не адрес). И по номеру порта, выясняется какому приложению или сервису адресованы данные. У нас это веб-сервер и номер порта — 80.
- На этом уровне происходит установление сеанса между компьютером и сервером.
- Уровень представления видит, как все должно быть структурировано и приводит информацию в читабельный вид.
- И на этом уровне приложения или сервисы понимают, что надо выполнить.
Task:
Чем роутер отличается от маршрутизатора?
Decision:
роутер и маршрутизатор — это одно и то же устройство. Однако под маршрутизатором часто подразумевают устройство для создания в первую очередь проводной сети, в то время как роутер — для беспроводной
Task:
Чем коммутатор отличается от маршрутизатора?
Decision:
Основные отличия коммутатора и маршрутизатора:
- Свитч проще с технической точки зрения и обладает ограниченной функциональностью.
- Маршрутизаторы сложнее устроены и могут анализировать объём информации, определять IP-адреса.
- Коммутаторы работают исключительно с MAC-адресами.
- Маршрутизаторам свойственен сетевой уровень модели OSI.
- Маршрутизаторы отличаются подключением к интернету.
- Для работы коммутатора и маршрутизатора нужен порт LAN, но последнее устройство также использует и WAN-порт.
Task:
Команды Subversion
Decision:
- Обновление рабочей копии 
svn update
- Внесение изменений:
svn add
svn delete
svn copy
svn move
- Анализ изменений:
svn status
svn diff
svn revert
- Слияние изменений, выполненных другими, с вашей рабочей копией:
svn update
svn resolved
- Фиксация изменений:
svn commit